{"version":3,"sources":["webpack:///./components/editor/paragraph/paragraph.css","webpack:///./components/editor/add_button/addButton.css","webpack:///./routes/home/style.css","webpack:///./components/button/button.tsx","webpack:///./components/editor/add_button/addBoxIcon.tsx","webpack:///./components/editor/add_button/addButton.tsx","webpack:///./components/sortable_card/sortableCard.tsx","webpack:///./components/editor/paragraph/deleteIcon.tsx","webpack:///./components/editor/paragraph/reorderIcon.tsx","webpack:///./components/editor/paragraph/paragraph.tsx","webpack:///./components/editor/preview/preview.tsx","webpack:///./components/editor/editor.tsx","webpack:///./routes/home/index.tsx","webpack:///./components/card/card.css","webpack:///./components/button/button.css","webpack:///./components/editor/editor.css","webpack:///./components/styles/japanese.css","webpack:///./components/editor/preview/preview.css"],"names":["module","exports","Button","props","className","style","btn","type","onClick","children","AddBoxIcon","xmlns","height","viewBox","width","d","AddButton","dispatch","useContext","EditorContext","useCallback","addParagraph","buttonStyle","SortableCard","ref","useRef","dragContext","DragContext","onDragStart","e","dataTransfer","Error","dropEffect","effectAllowed","data","index","onMovieStart","onDragEnd","onMoveEnd","onDrag","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","clientY","onMove","draggable","onDragOver","DeleteIcon","ReorderIcon","Paragraph","state","p","paragraphs","id","console","log","lastAdded","bindDispatch","fn","args","ParagraphPresenter","text","isSorting","isDragging","draggingIndex","focus","onChange","updateParagraphText","onDelete","deleteParagraph","onMoveStart","startMoving","moveParagraph","endMove","currentTarget","value","preventDefault","textArea","useEffect","cardStyle","card","pStyle","paragraph","data-is-editing","data-is-dragging","move","textarea","onKeyUp","count","length","delete","Preview","useMemo","list","map","lines","split","reduce","acc","i","key","jpStyle","preview","Editor","editor","showsPreview","createContext","Home","home"],"mappings":"4EACAA,EAAOC,QAAU,CAAC,UAAY,mBAAmB,SAAW,kBAAkB,MAAQ,eAAe,YAAY,mBAAmB,OAAS,gBAAgB,KAAO,gB,mBCApKD,EAAOC,QAAU,CAAC,aAAa,sB,iBCA/BD,EAAOC,QAAU,CAAC,KAAO,gB,kCCSlB,SAASC,EAAOC,GACrB,IAAIC,EAAa,GAAEC,IAAMC,OAAOH,EAAMC,YAItC,MAHmB,YAAfD,EAAMI,OACRH,GAAc,IAAGC,IAAM,gBAGvB,sBAAQG,QAASL,EAAMK,QAASJ,UAAWA,GACxCD,EAAMM,U,+MCfN,SAASC,EAAWP,GACzB,OACE,qBACEQ,MAAM,6BACNC,OAAO,KACPC,QAAQ,YACRC,MAAM,MACFX,GAEJ,oBAAMY,EAAE,uHCHP,SAASC,IACd,MAAM,SAAEC,GAAaC,YAAWC,KAC1BX,EAAUY,YAAY,KAC1BH,EAASI,gBACR,IACH,OACE,YAACnB,EAAD,CAAQE,UAAWC,IAAM,cAAeE,KAAK,UAAUC,QAASA,GAC9D,YAACE,EAAD,CAAYN,UAAWkB,IAAY,cADrC,IACqD,iCCIlD,SAASC,EAAapB,GAC3B,MAAMqB,EAAMC,YAA8B,MAEpCC,EAAcR,YAAWS,GACzBC,EAAcR,YACjBS,IACC,MAAMC,EAAeD,EAAEC,aACvB,IAAKA,EACH,MAAM,IAAIC,MAEZD,EAAaE,WAAa,OAC1BF,EAAaG,cAAgB,OAC7BP,EAAYQ,KAAO,CAAEC,MAAOhC,EAAMgC,OAClC,MAAAhC,EAAMiC,cAANjC,EAAMiC,aAAejC,EAAMgC,QAE7B,CAAChC,EAAMgC,QAEHE,EAAYjB,YAAY,KAC5B,MAAAjB,EAAMmC,WAANnC,EAAMmC,aACL,CAACnC,EAAMmC,YACJC,EAASnB,YACZS,IAAiB,MAChB,IAAKL,EAAIgB,UAAYX,EAAEC,aACrB,OAEF,IAAKJ,EAAYQ,KACf,OAEF,MAAMO,EAAYf,EAAYQ,KAAKC,MAC7BO,EAAavC,EAAMgC,MAEzB,GAAIM,IAAcC,EAChB,OAGF,MAAMC,EAAiB,SAAGnB,EAAIgB,cAAP,EAAG,EAAaI,wBAEjCC,GACHF,EAAkBG,OAASH,EAAkBI,KAAO,EAIjDC,EAFkCnB,EAAEoB,QAEJN,EAAkBI,IAKpDN,EAAYC,GAAcM,EAAeH,GAIzCJ,EAAYC,GAAcM,EAAeH,IAI7C,MAAA1C,EAAM+C,QAAN/C,EAAM+C,OAAST,EAAWC,GAK1BhB,EAAYQ,KAAKC,MAAQO,IAE3B,CAACvC,EAAMgC,QAET,OACE,mBACEX,IAAKA,EACLpB,UAAWD,EAAMC,UACjB+C,WAAS,EACTvB,YAAaA,EACbwB,WAAYb,EACZF,UAAWA,GAEVlC,EAAMM,UC1FN,SAAS4C,IACd,OACE,mBACE1C,MAAM,6BACNC,OAAO,KACPC,QAAQ,YACRC,MAAM,MAEN,oBAAMC,EAAE,mFCRP,SAASuC,IACd,OACE,mBACE3C,MAAM,6BACNC,OAAO,KACPC,QAAQ,YACRC,MAAM,MAEN,oBAAMC,EAAE,iECYP,SAASwC,EAAUpD,GACxB,MAAM,MAAEqD,EAAF,SAASvC,GAAaC,YAAWC,KACjCsC,EAAID,EAAME,WAAWvD,EAAMwD,IACjC,IAAKF,EACH,OAAO,KAETG,QAAQC,IAAK,GAAE1D,EAAMgC,SAASqB,EAAMM,aACpC,MAAMC,EAAe3C,aAAY,SAG/B4C,GACA,OAAO5C,YAAY,IAAI6C,KACrBhD,EAAS+C,KAAMC,KACd,MAEL,IACA,OACE,YAACC,EAAD,CACEP,GAAIxD,EAAMwD,GACVxB,MAAOhC,EAAMgC,MACbgC,KAAMV,EAAEU,KACRC,UAAWZ,EAAMY,UACjBC,WAAYb,EAAMc,gBAAkBnE,EAAMgC,MAC1CoC,MAAOpE,EAAMgC,QAAUqB,EAAMM,UAC7BU,SAAUT,EAAaU,KACvBC,SAAUX,EAAaY,KACvBC,YAAab,EAAac,KAC1B3B,OAAQa,EAAae,KACrBxC,UAAWyB,EAAagB,OAmBvB,SAASb,EAAmB/D,GACjC,MAAMqE,EAAWpD,YACdS,IACC,MAAA1B,EAAMqE,UAANrE,EAAMqE,SAAY3C,EAAEmD,cAAmCC,MAAO9E,EAAMwD,KAEtE,CAACxD,EAAMqE,SAAUrE,EAAMwD,KAEnBe,EAAWtD,YACdS,IACCA,EAAEqD,iBACF,MAAA/E,EAAMuE,UAANvE,EAAMuE,SAAWvE,EAAMwD,KAEzB,CAACxD,EAAMwD,KAEHwB,EAAW1D,YAAmC,MAMpD,OALA2D,YAAU,KACS,MAAbjF,EAAMoE,QACR,SAAAY,EAAS3C,UAAT,EAAkB+B,UAEnB,CAACpE,EAAMoE,QAER,kBACEnE,UAAY,GAAEiF,IAAUC,QAAQC,IAAOC,YACvCC,kBAAiBtF,EAAMiE,UAAY,OAAS,QAC5CsB,mBAAkBvF,EAAMkE,WAAa,OAAS,SAE9C,YAAC9C,EAAD,CACEY,MAAOhC,EAAMgC,MACb/B,UAAY,GAAEmF,IAAOI,QAAQJ,IAAO,eACpCnD,aAAcjC,EAAMyE,YACpB1B,OAAQ/C,EAAM+C,OACdZ,UAAWnC,EAAMmC,WAEjB,YAACgB,EAAD,OAEF,mBAAKlD,UAAWmF,IAAOK,UACrB,wBAAUpE,IAAK2D,EAAUF,MAAO9E,EAAMgE,KAAM0B,QAASrB,IACrD,mBAAKpE,UAAWmF,IAAOO,OACrB,wBAAO3F,EAAMgE,KAAK4B,UAGtB,mBAAK3F,UAAY,GAAEmF,IAAOS,UAAUT,IAAO,gBACzC,sBAAQ/E,QAASkE,GACf,YAACrB,EAAD,SCnGK,SAAS4C,EAAQ9F,GAC9B,MAAMgE,EAAO+B,YAAQ,IACZ/F,EAAMgG,KAAKC,IAAKzC,IAAO,QAC5B,MAAM0C,GAAQ,kBAAClG,EAAMqF,UAAU7B,SAAjB,EAAC,EAAqBQ,MAAtB,EAA8B,IAAImC,MAAM,MAChDnC,EAAOkC,EAAME,OACjB,CAACC,EAAKrC,EAAMsC,IACNA,IAAMJ,EAAMN,OAAS,EAChB,IAAIS,EAAKrC,GAET,IAAIqC,EAAKrC,EAAM,kBAAIuC,IAAM,MAAKD,KAGzC,IAEF,OACE,iBACErG,UAAY,GAAEuG,IAAQ,iBACtBD,IAAM,qBAAoB/C,GAEzBQ,KAIN,CAAChE,EAAMgG,KAAMhG,EAAMqF,YACtB,OAAO,mBAAKpF,UAAY,GAAEC,IAAMuG,WAAWvB,IAAUC,QAASnB,GC7BzD,SAAS0C,IACd,MAAM,MAAErD,GAAUtC,YAAWC,KAC7B,OACE,mBAAKf,UAAWC,IAAMyG,QACpB,uBACE,sBACGtD,EAAM2C,KAAKC,IAAI,CAACzC,EAAIxB,KACnB,MAAMsB,EAAID,EAAME,WAAWC,GAC3B,OACEF,GACE,YAACF,EAAD,CAAWmD,IAAM,aAAYjD,EAAEE,GAAMA,GAAIF,EAAEE,GAAIxB,MAAOA,MAI5D,sBACE,YAACnB,EAAD,SAILwC,EAAMuD,cACL,uBACE,YAACd,EAAD,CAASE,KAAM3C,EAAM2C,KAAMX,UAAWhC,EAAME,e,8GLZtD,MAAM/B,EAAcqF,wBAAwB,CAAE9E,KAAM,O,6GMLrC+E,UARmB,IAE9B,mBAAK7G,UAAWC,IAAM6G,MACpB,YAACL,EAAD,Q,iBCNN7G,EAAOC,QAAU,CAAC,KAAO,gB,mBCAzBD,EAAOC,QAAU,CAAC,IAAM,aAAa,WAAW,kBAAkB,cAAc,uB,iBCAhFD,EAAOC,QAAU,CAAC,OAAS,kB,iBCA3BD,EAAOC,QAAU,CAAC,gBAAgB,yB,iBCAlCD,EAAOC,QAAU,CAAC,QAAU","file":"route-home.chunk.11e81.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"paragraph__3XZVW\",\"textarea\":\"textarea__lochO\",\"count\":\"count__1uRWR\",\"edit-form\":\"edit-form__1rRzC\",\"delete\":\"delete__3Sp8N\",\"move\":\"move__3cboQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add-button\":\"add-button__1KgZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home__5d1wS\"};","import { ComponentChildren, h } from \"preact\";\nimport style from \"./button.css\";\n\nexport interface ButtonProps {\n  className?: string;\n  type?: \"primary\";\n  onClick?: (e: MouseEvent) => void;\n  children?: ComponentChildren;\n}\n\nexport function Button(props: ButtonProps) {\n  let className = `${style.btn} ${props.className}`;\n  if (props.type === \"primary\") {\n    className += ` ${style[\"btn-primary\"]}`;\n  }\n  return (\n    <button onClick={props.onClick} className={className}>\n      {props.children}\n    </button>\n  );\n}\n","import { h } from \"preact\";\n\nexport function AddBoxIcon(props: { className?: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      {...props}\n    >\n      <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\" />\n    </svg>\n  );\n}\n","import { h } from \"preact\";\nimport { Button } from \"../../button/button\";\nimport { AddBoxIcon } from \"./addBoxIcon\";\nimport style from \"./addButton.css\";\nimport buttonStyle from \"../../button/button.css\";\nimport { useCallback, useContext } from \"preact/hooks\";\nimport { addParagraph, EditorContext } from \"../editorState\";\n\nexport function AddButton() {\n  const { dispatch } = useContext(EditorContext);\n  const onClick = useCallback(() => {\n    dispatch(addParagraph());\n  }, []);\n  return (\n    <Button className={style[\"add-button\"]} type=\"primary\" onClick={onClick}>\n      <AddBoxIcon className={buttonStyle[\"btn-icon\"]} /> <span>追加する</span>\n    </Button>\n  );\n}\n","import { ComponentChildren, createContext, h } from \"preact\";\nimport { useCallback, useContext, useRef } from \"preact/hooks\";\n\ninterface SortableCardProps {\n  index: number;\n  onMovieStart?: (index: number) => void;\n  onMove?: (dragIndex: number, dropIndex: number) => void;\n  onMoveEnd?: () => void;\n  className?: string;\n  children?: ComponentChildren;\n}\n\ntype DragInfo = {\n  data: {\n    index: number;\n  } | null;\n};\nconst DragContext = createContext<DragInfo>({ data: null });\n\nexport function SortableCard(props: SortableCardProps) {\n  const ref = useRef<HTMLDivElement | null>(null);\n  //const [isDragging, setDraggingState] = useState(false);\n  const dragContext = useContext(DragContext);\n  const onDragStart = useCallback(\n    (e: DragEvent) => {\n      const dataTransfer = e.dataTransfer;\n      if (!dataTransfer) {\n        throw new Error();\n      }\n      dataTransfer.dropEffect = \"move\";\n      dataTransfer.effectAllowed = \"move\";\n      dragContext.data = { index: props.index };\n      props.onMovieStart?.(props.index);\n    },\n    [props.index]\n  );\n  const onDragEnd = useCallback(() => {\n    props.onMoveEnd?.();\n  }, [props.onMoveEnd]);\n  const onDrag = useCallback(\n    (e: DragEvent) => {\n      if (!ref.current || !e.dataTransfer) {\n        return;\n      }\n      if (!dragContext.data) {\n        return;\n      }\n      const dragIndex = dragContext.data.index;\n      const hoverIndex = props.index;\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      // Determine mouse position\n      const clientOffset = { x: e.clientX, y: e.clientY };\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      // Time to actually perform the action\n      props.onMove?.(dragIndex, hoverIndex);\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      dragContext.data.index = hoverIndex;\n    },\n    [props.index]\n  );\n  return (\n    <div\n      ref={ref}\n      className={props.className}\n      draggable\n      onDragStart={onDragStart}\n      onDragOver={onDrag}\n      onDragEnd={onDragEnd}\n    >\n      {props.children}\n    </div>\n  );\n}\n","import { h } from \"preact\";\n\nexport function DeleteIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n    >\n      <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n    </svg>\n  );\n}\n","import { h } from \"preact\";\n\nexport function ReorderIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n    >\n      <path d=\"M3 15h18v-2H3v2zm0 4h18v-2H3v2zm0-8h18V9H3v2zm0-6v2h18V5H3z\" />\n    </svg>\n  );\n}\n","import { h } from \"preact\";\nimport { useCallback, useContext, useEffect, useRef } from \"preact/hooks\";\nimport { SortableCard } from \"../../sortable_card/sortableCard\";\nimport { DeleteIcon } from \"./deleteIcon\";\nimport pStyle from \"./paragraph.css\";\nimport cardStyle from \"../../card/card.css\";\nimport { ReorderIcon } from \"./reorderIcon\";\nimport {\n  deleteParagraph,\n  EditorAction,\n  EditorContext,\n  endMove,\n  moveParagraph,\n  startMoving,\n  updateParagraphText,\n} from \"../editorState\";\n\ninterface ParagraphProps {\n  id: string;\n  index: number;\n}\n\nexport function Paragraph(props: ParagraphProps) {\n  const { state, dispatch } = useContext(EditorContext);\n  const p = state.paragraphs[props.id];\n  if (!p) {\n    return null;\n  }\n  console.log(`${props.index}:${state.lastAdded}`);\n  const bindDispatch = useCallback(function <\n    A extends unknown[],\n    B extends EditorAction\n  >(fn: (...args: A) => B) {\n    return useCallback((...args: A) => {\n      dispatch(fn(...args));\n    }, []);\n  },\n  []);\n  return (\n    <ParagraphPresenter\n      id={props.id}\n      index={props.index}\n      text={p.text}\n      isSorting={state.isSorting}\n      isDragging={state.draggingIndex === props.index}\n      focus={props.index === state.lastAdded}\n      onChange={bindDispatch(updateParagraphText)}\n      onDelete={bindDispatch(deleteParagraph)}\n      onMoveStart={bindDispatch(startMoving)}\n      onMove={bindDispatch(moveParagraph)}\n      onMoveEnd={bindDispatch(endMove)}\n    />\n  );\n}\n\ninterface ParagraphPresenterProps {\n  id: string;\n  index: number;\n  text: string;\n  isSorting: boolean;\n  isDragging: boolean;\n  focus: boolean;\n  onChange?(text: string, id: string): void;\n  onDelete?(id: string): void;\n  onMoveStart?(index: number): void;\n  onMove?(dragIndex: number, hoverIndex: number): void;\n  onMoveEnd?(): void;\n}\n\nexport function ParagraphPresenter(props: ParagraphPresenterProps) {\n  const onChange = useCallback(\n    (e: Event) => {\n      props.onChange?.((e.currentTarget as HTMLInputElement).value, props.id);\n    },\n    [props.onChange, props.id]\n  );\n  const onDelete = useCallback(\n    (e: Event) => {\n      e.preventDefault();\n      props.onDelete?.(props.id);\n    },\n    [props.id]\n  );\n  const textArea = useRef<HTMLTextAreaElement | null>(null);\n  useEffect(() => {\n    if (props.focus) {\n      textArea.current?.focus();\n    }\n  }, [props.focus]);\n  return (\n    <li\n      className={`${cardStyle.card} ${pStyle.paragraph}`}\n      data-is-editing={props.isSorting ? \"true\" : \"false\"}\n      data-is-dragging={props.isDragging ? \"true\" : \"false\"}\n    >\n      <SortableCard\n        index={props.index}\n        className={`${pStyle.move} ${pStyle[\"edit-form\"]}`}\n        onMovieStart={props.onMoveStart}\n        onMove={props.onMove}\n        onMoveEnd={props.onMoveEnd}\n      >\n        <ReorderIcon />\n      </SortableCard>\n      <div className={pStyle.textarea}>\n        <textarea ref={textArea} value={props.text} onKeyUp={onChange} />\n        <div className={pStyle.count}>\n          <span>{props.text.length}</span>\n        </div>\n      </div>\n      <div className={`${pStyle.delete} ${pStyle[\"edit-form\"]}`}>\n        <button onClick={onDelete}>\n          <DeleteIcon />\n        </button>\n      </div>\n    </li>\n  );\n}\n","import { h } from \"preact\";\nimport { useMemo } from \"preact/hooks\";\nimport { Paragraph } from \"../editorState\";\nimport style from \"./preview.css\";\nimport cardStyle from \"../../card/card.css\";\nimport jpStyle from \"../../styles/japanese.css\";\nimport { JSXInternal } from \"preact/src/jsx\";\n\nexport type PreviewProps = {\n  list: string[];\n  paragraph: Record<string, Paragraph>;\n};\n\nexport default function Preview(props: PreviewProps) {\n  const text = useMemo(() => {\n    return props.list.map((id) => {\n      const lines = (props.paragraph[id]?.text ?? \"\").split(\"\\n\");\n      const text = lines.reduce<(JSXInternal.Element | string)[]>(\n        (acc, text, i) => {\n          if (i === lines.length - 1) {\n            return [...acc, text];\n          } else {\n            return [...acc, text, <br key={`br-${i}`} />];\n          }\n        },\n        []\n      );\n      return (\n        <p\n          className={`${jpStyle[\"japanese-text\"]}`}\n          key={`preview-paragraph-${id}`}\n        >\n          {text}\n        </p>\n      );\n    });\n  }, [props.list, props.paragraph]);\n  return <div className={`${style.preview} ${cardStyle.card}`}>{text}</div>;\n}\n","import { h } from \"preact\";\nimport { useContext } from \"preact/hooks\";\nimport { AddButton } from \"./add_button/addButton\";\nimport style from \"./editor.css\";\nimport { EditorContext } from \"./editorState\";\nimport { Paragraph } from \"./paragraph/paragraph\";\nimport Preview from \"./preview/preview\";\n\nexport function Editor() {\n  const { state } = useContext(EditorContext);\n  return (\n    <div className={style.editor}>\n      <div>\n        <ul>\n          {state.list.map((id, index) => {\n            const p = state.paragraphs[id];\n            return (\n              p && (\n                <Paragraph key={`paragraph-${p.id}`} id={p.id} index={index} />\n              )\n            );\n          })}\n          <li>\n            <AddButton />\n          </li>\n        </ul>\n      </div>\n      {state.showsPreview && (\n        <div>\n          <Preview list={state.list} paragraph={state.paragraphs} />\n        </div>\n      )}\n    </div>\n  );\n}\n","import { FunctionalComponent, h } from \"preact\";\nimport { Editor } from \"../../components/editor/editor\";\nimport style from \"./style.css\";\n\nconst Home: FunctionalComponent = () => {\n  return (\n    <div className={style.home}>\n      <Editor />\n    </div>\n  );\n};\n\nexport default Home;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card__3mJh1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"btn__ove9P\",\"btn-icon\":\"btn-icon__3KkgF\",\"btn-primary\":\"btn-primary__1R6Z0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"editor__1I80g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"japanese-text\":\"japanese-text__1TNcs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preview\":\"preview__2K3aJ\"};"],"sourceRoot":""}