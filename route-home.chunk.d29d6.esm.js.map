{"version":3,"sources":["webpack:///./components/button/button.tsx","webpack:///./components/editor/add_button/addBoxIcon.tsx","webpack:///./components/editor/add_button/addButton.tsx","webpack:///./components/editor/paragraph/arrowDownwardIcon.tsx","webpack:///./components/editor/paragraph/arrowUpwardIcon.tsx","webpack:///./components/editor/paragraph/deleteIcon.tsx","webpack:///./components/editor/paragraph/paragraph.tsx","webpack:///./components/editor/preview/preview.tsx","webpack:///./components/editor/editor.tsx","webpack:///./components/button/button.css","webpack:///./components/editor/add_button/addButton.css","webpack:///./components/editor/editor.css","webpack:///./components/card/card.css","webpack:///./components/editor/paragraph/paragraph.css","webpack:///./components/editor/preview/preview.css","webpack:///./components/styles/japanese.css","webpack:///./routes/home/style.css","webpack:///./routes/home/index.tsx"],"names":["Button","props","otherProps","classNameToApply","style","className","type","children","AddBoxIcon","xmlns","height","viewBox","width","d","AddButton","dispatch","useContext","EditorContext","onClick","useCallback","addParagraph","buttonStyle","AllowDownwardIcon","AllowUpwardIcon","DeleteIcon","Paragraph","state","p","paragraphs","id","bindDispatch","fn","args","index","isLastItem","list","length","onMoveUpward","moveParagraph","onMoveDownward","onDeleteClick","window","confirm","deleteParagraph","ParagraphPresenter","text","isSorting","focus","lastAdded","onChange","updateParagraphText","onDelete","e","currentTarget","value","preventDefault","textArea","useRef","useEffect","current","scrollHeight","textAreaId","controlTabIndex","cardStyle","pStyle","tabIndex","disabled","name","ref","onKeyUp","onPaste","placeholder","Preview","useMemo","map","lines","paragraph","split","reduce","acc","i","key","jpStyle","Editor","showsPreview","Home"],"mappings":"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","file":"route-home.chunk.d29d6.esm.js","sourcesContent":["import { ComponentChildren, h } from \"preact\";\nimport style from \"./button.css\";\n\nexport interface ButtonProps {\n  className?: string;\n  type?: \"primary\";\n  onClick?: (e: MouseEvent) => void;\n  children?: ComponentChildren;\n  tabIndex?: number;\n}\n\nexport function Button(props: ButtonProps) {\n  const { className, type, ...otherProps } = props;\n  let classNameToApply = `${style.btn} ${props.className}`;\n  if (props.type === \"primary\") {\n    classNameToApply += ` ${style[\"btn-primary\"]}`;\n  }\n  return (\n    <button className={classNameToApply} {...otherProps}>\n      {props.children}\n    </button>\n  );\n}\n","import { h } from \"preact\";\n\nexport function AddBoxIcon(props: { className?: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      {...props}\n    >\n      <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\" />\n    </svg>\n  );\n}\n","import { h } from \"preact\";\nimport { Button } from \"../../button/button\";\nimport { AddBoxIcon } from \"./addBoxIcon\";\nimport style from \"./addButton.css\";\nimport buttonStyle from \"../../button/button.css\";\nimport { useCallback, useContext } from \"preact/hooks\";\nimport { addParagraph, EditorContext } from \"../editorState\";\n\nexport function AddButton() {\n  const { dispatch } = useContext(EditorContext);\n  const onClick = useCallback(() => {\n    dispatch(addParagraph());\n  }, []);\n  return (\n    <Button className={style[\"add-button\"]} type=\"primary\" onClick={onClick}>\n      <AddBoxIcon className={buttonStyle[\"btn-icon\"]} /> <span>追加する</span>\n    </Button>\n  );\n}\n","import { h } from \"preact\";\n\nexport function AllowDownwardIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n    >\n      <path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\" />\n    </svg>\n  );\n}\n","import { h } from \"preact\";\n\nexport function AllowUpwardIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n    >\n      <path d=\"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\" />\n    </svg>\n  );\n}\n","import { h } from \"preact\";\n\nexport function DeleteIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n    >\n      <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n    </svg>\n  );\n}\n","import { h } from \"preact\";\nimport { useCallback, useContext, useEffect, useRef } from \"preact/hooks\";\nimport cardStyle from \"../../card/card.css\";\nimport {\n  deleteParagraph,\n  EditorAction,\n  EditorContext,\n  moveParagraph,\n  updateParagraphText,\n} from \"../editorState\";\nimport { AllowDownwardIcon } from \"./arrowDownwardIcon\";\nimport { AllowUpwardIcon } from \"./arrowUpwardIcon\";\nimport { DeleteIcon } from \"./deleteIcon\";\nimport pStyle from \"./paragraph.css\";\n\ninterface ParagraphProps {\n  id: string;\n\n  index: number;\n}\n\nexport function Paragraph(props: ParagraphProps) {\n  const { state, dispatch } = useContext(EditorContext);\n  const p = state.paragraphs[props.id];\n  if (!p) {\n    return null;\n  }\n  const bindDispatch = useCallback(function <\n    A extends unknown[],\n    B extends EditorAction\n  >(fn: (...args: A) => B) {\n    return useCallback((...args: A) => {\n      dispatch(fn(...args));\n    }, []);\n  },\n    []);\n  const index = props.index;\n  const isLastItem = index === state.list.length - 1;\n  const onMoveUpward = useCallback(() => {\n    dispatch(moveParagraph(index, index - 1));\n  }, [index]);\n  const onMoveDownward = useCallback(() => {\n    dispatch(moveParagraph(index, index + 1));\n  }, [index]);\n  const onDeleteClick = useCallback((id: string) => {\n    if (window.confirm(\"段落を消しますか？\")) {\n      dispatch(deleteParagraph(id));\n    }\n  }, []);\n  return (\n    <ParagraphPresenter\n      id={props.id}\n      index={index}\n      text={p.text}\n      isSorting={state.isSorting}\n      isLastItem={isLastItem}\n      focus={index === state.lastAdded}\n      onChange={bindDispatch(updateParagraphText)}\n      onDelete={onDeleteClick}\n      onMoveUpward={onMoveUpward}\n      onMoveDownward={onMoveDownward}\n    />\n  );\n}\n\ninterface ParagraphPresenterProps {\n  id: string;\n  index: number;\n  text: string;\n  isSorting: boolean;\n  isLastItem: boolean;\n  focus: boolean;\n  onChange(text: string, id: string): void;\n  onDelete(id: string): void;\n  onMoveUpward(): void;\n  onMoveDownward(): void;\n}\n\nexport function ParagraphPresenter(props: ParagraphPresenterProps) {\n  const onChange = useCallback(\n    (e: Event) => {\n      props.onChange?.((e.currentTarget as HTMLInputElement).value, props.id);\n    },\n    [props.onChange, props.id]\n  );\n  const onDelete = useCallback(\n    (e: Event) => {\n      e.preventDefault();\n      props.onDelete?.(props.id);\n    },\n    [props.id]\n  );\n  const textArea = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    if (props.focus) {\n      textArea.current?.focus();\n    }\n  }, [props.focus]);\n  useEffect(() => {\n    if (textArea.current) {\n      if (props.text.length === 0) {\n        textArea.current.style.height = \"\";\n      } else {\n        textArea.current.style.height = \"\";\n        textArea.current.style.height = `${textArea.current?.scrollHeight}px`;\n      }\n    }\n  }, [props.text]);\n  const textAreaId = `paragraph-${props.index}`;\n  const controlTabIndex = props.isSorting ? 0 : -1;\n  return (\n    <li\n      className={`${cardStyle.card} ${pStyle.paragraph}`}\n      data-is-editing={props.isSorting ? \"true\" : \"false\"}\n    >\n      <div className={`${pStyle.move} ${pStyle[\"edit-form\"]}`}>\n        <button\n          className={pStyle[\"move-button\"]}\n          aria-label=\"上へ移動\"\n          tabIndex={controlTabIndex}\n          onClick={props.onMoveUpward}\n          disabled={props.index === 0}\n        >\n          <AllowUpwardIcon />\n        </button>\n        <button\n          className={pStyle[\"move-button\"]}\n          aria-label=\"下へ移動\"\n          tabIndex={controlTabIndex}\n          onClick={props.onMoveDownward}\n          disabled={props.isLastItem}\n        >\n          <AllowDownwardIcon />\n        </button>\n      </div>\n      <label className={pStyle.textarea}>\n        <textarea\n          id={textAreaId}\n          name={`paragraph-${props.index}`}\n          ref={textArea}\n          value={props.text}\n          onKeyUp={onChange}\n          onChange={onChange}\n          onPaste={onChange}\n          placeholder={props.index === 0 ? \"文章を入力\" : \"\"}\n        />\n        <div className={pStyle.count} aria-label=\"文字カウント\">\n          {props.text.length}\n        </div>\n        <span className={pStyle[\"label-text\"]}>段落</span>\n      </label>\n      <div className={`${pStyle.delete} ${pStyle[\"edit-form\"]}`}>\n        <button\n          onClick={onDelete}\n          aria-label=\"削除ボタン\"\n          tabIndex={controlTabIndex}\n        >\n          <DeleteIcon />\n        </button>\n      </div>\n    </li>\n  );\n}\n","import { h } from \"preact\";\nimport { useMemo } from \"preact/hooks\";\nimport { Paragraph } from \"../editorState\";\nimport style from \"./preview.css\";\nimport cardStyle from \"../../card/card.css\";\nimport jpStyle from \"../../styles/japanese.css\";\nimport { JSXInternal } from \"preact/src/jsx\";\n\nexport type PreviewProps = {\n  list: string[];\n  paragraph: Record<string, Paragraph>;\n};\n\nexport default function Preview(props: PreviewProps) {\n  const text = useMemo(() => {\n    return props.list.map((id) => {\n      const lines = (props.paragraph[id]?.text ?? \"\").split(\"\\n\");\n      const text = lines.reduce<(JSXInternal.Element | string)[]>(\n        (acc, text, i) => {\n          if (i === lines.length - 1) {\n            return [...acc, text];\n          } else {\n            return [...acc, text, <br key={`br-${i}`} />];\n          }\n        },\n        []\n      );\n      return (\n        <p\n          className={`${jpStyle[\"japanese-text\"]}`}\n          key={`preview-paragraph-${id}`}\n        >\n          {text}\n        </p>\n      );\n    });\n  }, [props.list, props.paragraph]);\n  return <div className={`${style.preview} ${cardStyle.card}`}>{text}</div>;\n}\n","import { h } from \"preact\";\nimport { useContext } from \"preact/hooks\";\nimport { AddButton } from \"./add_button/addButton\";\nimport style from \"./editor.css\";\nimport { EditorContext } from \"./editorState\";\nimport { Paragraph } from \"./paragraph/paragraph\";\nimport Preview from \"./preview/preview\";\n\nexport function Editor() {\n  const { state } = useContext(EditorContext);\n  return (\n    <div className={style.editor}>\n      <div>\n        <ul>\n          {state.list.map((id, index) => {\n            const p = state.paragraphs[id];\n            return (\n              p && (\n                <Paragraph key={`paragraph-${p.id}`} id={p.id} index={index} />\n              )\n            );\n          })}\n          <li>\n            <AddButton />\n          </li>\n        </ul>\n      </div>\n      {state.showsPreview && (\n        <div>\n          <Preview list={state.list} paragraph={state.paragraphs} />\n        </div>\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"btn__ove9P\",\"btn-icon\":\"btn-icon__3KkgF\",\"btn-primary\":\"btn-primary__1R6Z0\"};","// extracted by mini-css-extract-plugin\nexport default {\"add-button\":\"add-button__1KgZw\"};","// extracted by mini-css-extract-plugin\nexport default {\"editor\":\"editor__1I80g\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"card__3mJh1\"};","// extracted by mini-css-extract-plugin\nexport default {\"paragraph\":\"paragraph__3XZVW\",\"textarea\":\"textarea__lochO\",\"label-text\":\"label-text__3th0i\",\"count\":\"count__1uRWR\",\"edit-form\":\"edit-form__1rRzC\",\"delete\":\"delete__3Sp8N\",\"move\":\"move__3cboQ\",\"move-button\":\"move-button__163WB\"};","// extracted by mini-css-extract-plugin\nexport default {\"preview\":\"preview__2K3aJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"japanese-text\":\"japanese-text__1TNcs\"};","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"home__5d1wS\"};","import { FunctionalComponent, h } from \"preact\";\nimport { Editor } from \"../../components/editor/editor\";\nimport style from \"./style.css\";\n\nconst Home: FunctionalComponent = () => {\n  return (\n    <div className={style.home}>\n      <Editor />\n    </div>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}