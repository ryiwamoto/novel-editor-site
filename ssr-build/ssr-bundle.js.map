{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./components/editor/paragraph/paragraph.css?a270","webpack:///./components/editor/add_button/addButton.css?e200","webpack:///./routes/home/style.css?acbe","webpack:///external \"preact\"","webpack:///internal/constants.ts","webpack:///internal/dom-utils.ts","webpack:///internal/feature-detection.ts","webpack:///internal/drag-data-store.ts","webpack:///internal/drag-utils.ts","webpack:///internal/drag-operation-controller.ts","webpack:///index.ts","webpack:///./components/card/card.css?78a1","webpack:///scroll-behaviour.ts","webpack:///../src/util.js","webpack:///../src/index.js","webpack:///./components/button/button.tsx","webpack:///./components/editor/add_button/addBoxIcon.tsx","webpack:///./components/editor/editorState.ts","webpack:///./components/editor/add_button/addButton.tsx","webpack:///./components/sortable_card/sortableCard.tsx","webpack:///./components/editor/paragraph/deleteIcon.tsx","webpack:///./components/editor/paragraph/reorderIcon.tsx","webpack:///./components/editor/paragraph/paragraph.tsx","webpack:///./components/editor/preview/preview.tsx","webpack:///./components/editor/editor.tsx","webpack:///./routes/home/index.tsx","webpack:///./components/header/previewIcon.tsx","webpack:///./components/header/sortIcon.tsx","webpack:///./components/header/index.tsx","webpack:///./components/app.tsx","webpack:///./index.js","webpack:///./components/button/button.css?e5db","webpack:///./components/editor/editor.css?142e","webpack:///./components/styles/japanese.css?76b6","webpack:///./components/header/style.css?b3e9","webpack:///./components/editor/preview/preview.css?cc68"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","CLASS_PREFIX","ALLOWED_EFFECTS","DROP_EFFECTS","supportsPassive","supportsPassiveEventListeners","opts","window","addEventListener","e","tagName","ev","handler","passive","document","removeEventListener","el","event","capture","options","off","array","length","reduce","v","touchEvent","touchIdentifier","changedTouches","identifier","coordinateProp","outPoint","pageXs","pageYs","touches","touch","push","x","average","y","TRANSFORM_CSS_VENDOR_PREFIXES","element","pnt","originalTransforms","offset","centerOnCoordinates","parseInt","offsetWidth","offsetHeight","translate","transformProp","style","_dataStore","_setDragImageHandler","this","DataTransfer","_dropEffect","indexOf","freeze","types","effectAllowed","type","data","Error","format","index","splice","image","sourceNode","nodeType","dragEvent","targetElement","dataStore","dataTransfer","cancelable","relatedTarget","leaveEvt","dndEvent","Event","bubbles","screenX","screenY","clientX","clientY","pageX","pageY","targetRect","getBoundingClientRect","offsetX","left","offsetY","top","defaultView","cancelled","dispatchEvent","dropEffect","activeDragOperation","_initialEvent","_config","_sourceNode","_dragOperationEndedCb","_lastTouchEvent","_initialTouch","_touchMoveHandler","_onTouchMove","_touchEndOrCancelHandler","_onTouchEndOrCancel","addDocumentListener","DragOperationController","_dragOperationState","_currentDragOperation","_dragDataStore","_currentHotspotCoordinates","_dragImagePageCoordinates","dragImageSrc","_dataTransfer","_this","_dragImageOffset","dispatchDragEvent","_cleanup","updateCentroidCoordinatesOfTouchesIn","dragImage","dragImageSetup","_dragImageTransforms","map","prefix","transform","replace","position","zIndex","classList","add","_dragImage","dragImageOffset","dragImageCenterOnTouch","cs","getComputedStyle","marginLeft","marginTop","width","height","translateElementToPoint","body","appendChild","_iterationIntervalId","setInterval","_iterationLock","_dragAndDropProcessModelIteration","iterationInterval","clearInterval","removeDocumentListener","parentNode","removeChild","isTouchIdentifierContainedInTouchEvent","startDrag","dragStartConditionOverride","_setup","preventDefault","dragImageTranslateOverride","handledDragImageTranslate_1","_immediateUserSelection","undefined","previousDragOperation","dragCancelled","_dragOperationEnded","sourceEl","dragImageTransforms","transitionEndCb","visibility","display","csDragImage","durationInS","parseFloat","transitionDuration","isNaN","rect","scrollLeft","documentElement","scrollTop","delayInS","transitionDelay","durationInMs","Math","round","setTimeout","_finishDragOperation","newUserSelection","elementFromPoint","previousTargetElement","_currentDropTarget","determineDropEffect","determineDragOperation","isDOMElement","remove","currentDragOperationClass","state","dragFailed","config","tryFindDraggableTarget","target","draggable","getAttribute","cloneNode","srcNode","dstNode","csName","setProperty","getPropertyValue","getPropertyPriority","pointerEvents","removeAttribute","nodeName","canvasSrc","canvasDst","canvasSrcImgData","getContext","getImageData","putImageData","hasChildNodes","childNodes","prepareNodeCopyAsDragImage","dragTarget","dragOperationEnded","err","evt","onReleasedItem","end","cancel","move","scroll","CustomEvent","EVENT_PREFIX","EVENT_DRAG_DRAGSTART_CANCEL","clearTimeout","timer","EVENT_DRAG_DRAGSTART_PENDING","onTouchstart","holdToDrag","onEvt","defaultActionOverride","defaultPrevented","override","keys","forEach","forceApply","detectedFeatures","features","dragEvents","userAgentSupportingNativeDnD","isBlinkEngine","test","navigator","userAgent","onDelayTouchstart","axis","isTopLevelEl","clientLeft","clientTop","bounds","innerWidth","innerHeight","clientWidth","clientHeight","prop","isTopLevel","arguments","scrollHeight","overflowY","scrollWidth","overflowX","currentCoordinate","size","threshold","scrollIntention","abs","scrollBounds","currentScrollOffset","scrollX","scrollY","_scrollAnimationFrameId","_currentCoordinates","_hoveredElement","_scrollableParent","_translateDragImageFn","_options","velocity","multiplier","_scrollIntentions","horizontal","vertical","_dynamicVelocity","requestAnimationFrame","scrollAnimation","scrollDiffX","scrollDiffY","getSetElementScroll","updateScrollIntentions","scheduleScrollAnimation","currentCoordinates","scrollableParent","scrollIntentions","dynamicVelocity","scrollableParentBounds","getElementViewportOffset","getElementViewportSize","currentCoordinatesOffset","determineScrollIntention","isScrollEndReached","determineDynamicVelocity","scrollBehaviourDragImageTranslateOverride","hoveredElement","translateDragImageFn","isScrollable","findScrollableParent","cancelAnimationFrame","EMPTY","obj","props","let","exec","url","route","ret","reg","match","matches","split","decodeURIComponent","slice","join","segmentize","max","charAt","param","flags","plus","star","val","default","pathRankSort","a","b","rank","prepareVNodeForRanking","vnode","path","rankSegment","rankChild","segment","super","const","currentIndex","currentComponent","prevRaf","currentHook","afterPaintEffects","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","getHookState","hooks","useReducer","reducer","initialState","init","hookState","_reducer","invokeOrReturn","nextValue","action","setState","useEffect","callback","args","argsChanged","useRef","initialValue","useMemo","current","factory","useCallback","useContext","context","provider","sub","flushAfterPaintEffects","component","invokeCleanup","invokeEffect","raf","done","timeout","HAS_RAF","commitQueue","some","filter","cb","hook","oldArgs","newArgs","arg","f","Button","className","btn","onClick","children","AddBoxIcon","xmlns","viewBox","createParagraph","text","id","String","Date","now","updateParagraphText","deleteParagraph","startMoving","moveParagraph","from","to","endMove","editorReducer","paragraphs","list","lastAdded","draggingIndex","isSorting","showsPreview","initParagraph","ver","EditorContext","createContext","dispatch","AddButton","buttonStyle","polyfill","DragContext","SortableCard","ref","dragContext","onDragStart","onMovieStart","onDragEnd","onMoveEnd","onDrag","dragIndex","hoverIndex","hoverBoundingRect","hoverMiddleY","bottom","hoverClientY","onMove","onDragOver","DeleteIcon","ReorderIcon","Paragraph","bindDispatch","fn","ParagraphPresenter","isDragging","focus","onChange","onDelete","onMoveStart","currentTarget","textArea","textAreaId","cardStyle","card","pStyle","paragraph","data-is-editing","data-is-dragging","textarea","onKeyUp","placeholder","count","aria-label","delete","tabIndex","Preview","lines","acc","jpStyle","preview","Editor","editor","Home","home","PreviewIcon","enableBackground","SortIcon","Header","onToggleSort","onTogglePreview","header","App","currentUrl","handleRoute","JSON","parse","localStorage","getItem","loadEditorState","setItem","stringify","saveEditorState","contextValue","Provider","Route"],"mappings":"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","file":"ssr-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"QfWi\");\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"paragraph__3XZVW\",\"textarea\":\"textarea__lochO\",\"label-text\":\"label-text__3th0i\",\"count\":\"count__1uRWR\",\"edit-form\":\"edit-form__1rRzC\",\"delete\":\"delete__3Sp8N\",\"move\":\"move__3cboQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add-button\":\"add-button__1KgZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home__5d1wS\"};","module.exports = require(\"preact\");","// debug mode, which will highlight drop target, immediate user selection and events fired as you interact\n// only available in non-minified js / development environment\n// export const DEBUG = false;\n\n// css classes\nexport const CLASS_PREFIX = \"dnd-poly-\";\nexport const CLASS_DRAG_IMAGE = CLASS_PREFIX + \"drag-image\";\nexport const CLASS_DRAG_IMAGE_SNAPBACK = CLASS_PREFIX + \"snapback\";\nexport const CLASS_DRAG_OPERATION_ICON = CLASS_PREFIX + \"icon\";\n\n// custom event\nexport const EVENT_PREFIX = \"dnd-poly-\";\nexport const EVENT_DRAG_DRAGSTART_PENDING = EVENT_PREFIX + \"dragstart-pending\";\nexport const EVENT_DRAG_DRAGSTART_CANCEL = EVENT_PREFIX + \"dragstart-cancel\";\n\n// defines the array indexes to access string in ALLOWED_EFFECTS\nexport const enum EFFECT_ALLOWED {\n    NONE = 0,\n    COPY = 1,\n    COPY_LINK = 2,\n    COPY_MOVE = 3,\n    LINK = 4,\n    LINK_MOVE = 5,\n    MOVE = 6,\n    ALL = 7\n}\n\n// contains all possible values of the effectAllowed property\nexport const ALLOWED_EFFECTS = [ \"none\", \"copy\", \"copyLink\", \"copyMove\", \"link\", \"linkMove\", \"move\", \"all\" ];\n\n// defines the array indexes to access string in DROP_EFFECTS\nexport const enum DROP_EFFECT {\n    NONE = 0,\n    COPY = 1,\n    MOVE = 2,\n    LINK = 3,\n}\n\n// contains all possible values of the dropEffect property\nexport const DROP_EFFECTS = [ \"none\", \"copy\", \"move\", \"link\" ];\n","import { CLASS_DRAG_IMAGE_SNAPBACK } from \"./constants\";\nimport { supportsPassiveEventListener } from \"./feature-detection\";\n\n// evaluate once on startup\nconst supportsPassive = supportsPassiveEventListener();\n\nexport interface Point {\n    x:number;\n    y:number;\n}\n\nexport function isDOMElement( object:Element ) {\n    return object && object.tagName;\n}\n\nexport function addDocumentListener( ev:string, handler:EventListener, passive:boolean = true ) {\n    document.addEventListener( ev, handler, supportsPassive ? { passive: passive } : false );\n}\n\nexport function removeDocumentListener( ev:string, handler:EventListener ) {\n    document.removeEventListener( ev, handler );\n}\n\nexport function onEvt(el:EventTarget, event:string, handler:EventListener, capture:boolean = false) {\n\n    const options = supportsPassive ? {passive: true, capture: capture} : capture;\n\n    el.addEventListener(event, handler, options);\n\n    return {\n        off() {\n            el.removeEventListener(event, handler, options as any);\n        }\n    };\n}\n\nfunction prepareNodeCopyAsDragImage( srcNode:HTMLElement, dstNode:HTMLElement ) {\n\n    // Is this node an element?\n    if( srcNode.nodeType === 1 ) {\n\n        // Clone the style\n        const cs = getComputedStyle( srcNode );\n        for( let i = 0; i < cs.length; i++ ) {\n            const csName = cs[ i ];\n            dstNode.style.setProperty( csName, cs.getPropertyValue( csName ), cs.getPropertyPriority( csName ) );\n        }\n\n        // no interaction with the drag image, pls! this is also important to make the drag image transparent for hit-testing\n        // hit testing is done in the drag and drop iteration to find the element the user currently is hovering over while dragging.\n        // if pointer-events is not none or a browser does behave in an unexpected way than the hit test transparency on the drag image\n        // will break\n        dstNode.style.pointerEvents = \"none\";\n\n        // Remove any potential conflict attributes\n        dstNode.removeAttribute( \"id\" );\n        dstNode.removeAttribute( \"class\" );\n        dstNode.removeAttribute( \"draggable\" );\n\n        // canvas elements need special handling by copying canvas image data\n        if( dstNode.nodeName === \"CANVAS\" ) {\n\n            const canvasSrc = srcNode as HTMLCanvasElement;\n            const canvasDst = dstNode as HTMLCanvasElement;\n\n            const canvasSrcImgData = canvasSrc.getContext( \"2d\" ).getImageData( 0, 0, canvasSrc.width, canvasSrc.height );\n\n            canvasDst.getContext( \"2d\" ).putImageData( canvasSrcImgData, 0, 0 );\n        }\n    }\n\n    // Do the same for the children\n    if( srcNode.hasChildNodes() ) {\n\n        for( let i = 0; i < srcNode.childNodes.length; i++ ) {\n\n            prepareNodeCopyAsDragImage( <HTMLElement>srcNode.childNodes[ i ], <HTMLElement>dstNode.childNodes[ i ] );\n        }\n    }\n}\n\nexport function createDragImage( sourceNode:HTMLElement ):HTMLElement {\n\n    const dragImage = <HTMLElement>sourceNode.cloneNode( true );\n\n    // this removes any id's and stuff that could interfere with drag and drop\n    prepareNodeCopyAsDragImage( sourceNode, dragImage );\n\n    return dragImage;\n}\n\nfunction average( array:Array<number> ) {\n    if( array.length === 0 ) {\n        return 0;\n    }\n    return array.reduce( (function( s, v ) {\n        return v + s;\n    }), 0 ) / array.length;\n}\n\nexport function isTouchIdentifierContainedInTouchEvent( touchEvent:TouchEvent, touchIdentifier:number ) {\n    for( let i = 0; i < touchEvent.changedTouches.length; i++ ) {\n        const touch = touchEvent.changedTouches[ i ];\n        if( touch.identifier === touchIdentifier ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Calc center of polygon spanned by multiple touches in page (full page size, with hidden scrollable area) coordinates\n * or in viewport (screen coordinates) coordinates.\n */\nexport function updateCentroidCoordinatesOfTouchesIn( coordinateProp:\"page\" | \"client\", event:TouchEvent, outPoint:Point ):void {\n    const pageXs:Array<number> = [], pageYs:Array<number> = [];\n    for( let i = 0; i < event.touches.length; i++ ) {\n        const touch = event.touches[ i ];\n        pageXs.push( touch[ coordinateProp + \"X\" ] );\n        pageYs.push( touch[ coordinateProp + \"Y\" ] );\n    }\n    outPoint.x = average( pageXs );\n    outPoint.y = average( pageYs );\n}\n\n// cross-browser css transform property prefixes\nconst TRANSFORM_CSS_VENDOR_PREFIXES = [ \"\", \"-webkit-\" ];\n\nexport function extractTransformStyles( sourceNode:HTMLElement ):string[] {\n\n    return TRANSFORM_CSS_VENDOR_PREFIXES.map( function( prefix:string ) {\n\n        let transform = sourceNode.style[ prefix + \"transform\" ];\n\n        if( !transform || transform === \"none\" ) {\n            return \"\";\n        }\n\n        // removes translate(x,y)\n        return transform.replace( /translate\\(\\D*\\d+[^,]*,\\D*\\d+[^,]*\\)\\s*/g, \"\" );\n    } );\n}\n\nexport function translateElementToPoint( element:HTMLElement, pnt:Point, originalTransforms:string[], offset?:Point, centerOnCoordinates = true ):void {\n\n    let x = pnt.x, y = pnt.y;\n\n    if( offset ) {\n        x += offset.x;\n        y += offset.y;\n    }\n\n    if( centerOnCoordinates ) {\n        x -= (parseInt( <any>element.offsetWidth, 10 ) / 2);\n        y -= (parseInt( <any>element.offsetHeight, 10 ) / 2);\n    }\n\n    // using translate3d for max performance\n    const translate = \"translate3d(\" + x + \"px,\" + y + \"px, 0)\";\n\n    for( let i = 0; i < TRANSFORM_CSS_VENDOR_PREFIXES.length; i++ ) {\n        const transformProp = TRANSFORM_CSS_VENDOR_PREFIXES[ i ] + \"transform\";\n        element.style[ transformProp ] = translate + \" \" + originalTransforms[ i ];\n    }\n}\n\n/**\n * calculates the coordinates of the drag source and transitions the drag image to those coordinates.\n * the drag operation is finished after the transition has ended.\n */\nexport function applyDragImageSnapback( sourceEl:HTMLElement, dragImage:HTMLElement, dragImageTransforms:string[], transitionEndCb:Function ):void {\n\n    const cs = getComputedStyle( sourceEl );\n\n    if( cs.visibility === \"hidden\" || cs.display === \"none\" ) {\n        console.log( \"dnd-poly: source node is not visible. skipping snapback transition.\" );\n        // shortcut to end the drag operation\n        transitionEndCb();\n        return;\n    }\n    // add class containing transition rules\n    dragImage.classList.add( CLASS_DRAG_IMAGE_SNAPBACK );\n\n    const csDragImage = getComputedStyle( dragImage );\n    const durationInS = parseFloat( csDragImage.transitionDuration );\n    if( isNaN( durationInS ) || durationInS === 0 ) {\n        console.log( \"dnd-poly: no transition used - skipping snapback\" );\n        transitionEndCb();\n        return;\n    }\n\n    console.log( \"dnd-poly: starting dragimage snap back\" );\n\n    // calc source node position\n    const rect = sourceEl.getBoundingClientRect();\n\n    const pnt:Point = {\n        x: rect.left,\n        y: rect.top\n    };\n\n    // add scroll offset of document\n    pnt.x += (document.body.scrollLeft || document.documentElement.scrollLeft);\n    pnt.y += (document.body.scrollTop || document.documentElement.scrollTop);\n\n    //TODO this sometimes fails to calculate the correct origin position.. find out when exactly and how to detect\n    pnt.x -= parseInt( cs.marginLeft, 10 );\n    pnt.y -= parseInt( cs.marginTop, 10 );\n\n    const delayInS = parseFloat( csDragImage.transitionDelay );\n    const durationInMs = Math.round( (durationInS + delayInS) * 1000 );\n\n    // apply the translate\n    translateElementToPoint( dragImage, pnt, dragImageTransforms, undefined, false );\n\n    setTimeout( transitionEndCb, durationInMs );\n}\n","export interface DetectedFeatures {\n    draggable:boolean;\n    dragEvents:boolean;\n    userAgentSupportingNativeDnD:boolean;\n}\n\nexport function detectFeatures():DetectedFeatures {\n\n    let features:DetectedFeatures = {\n        dragEvents: (\"ondragstart\" in document.documentElement),\n        draggable: (\"draggable\" in document.documentElement),\n        userAgentSupportingNativeDnD: undefined\n    };\n\n    const isBlinkEngine = !!((<any>window).chrome) || /chrome/i.test( navigator.userAgent );\n\n    features.userAgentSupportingNativeDnD = !(\n        // if is mobile safari or android browser -> no native dnd\n        (/iPad|iPhone|iPod|Android/.test( navigator.userAgent ))\n        || // OR\n        //if is blink(chrome/opera) with touch events enabled -> no native dnd\n        (isBlinkEngine && (\"ontouchstart\" in document.documentElement))\n    );\n\n    return features;\n}\n\nexport function supportsPassiveEventListener():boolean {\n\n    let supportsPassiveEventListeners = false;\n\n    // reference https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    try {\n        let opts = Object.defineProperty( {}, \"passive\", {\n            get: function() {\n                supportsPassiveEventListeners = true;\n            }\n        } );\n        window.addEventListener( \"test\", null, opts );\n    }\n        // tslint:disable-next-line:no-empty\n    catch( e ) {\n    }\n\n    return supportsPassiveEventListeners;\n}\n","import { ALLOWED_EFFECTS, DROP_EFFECT, DROP_EFFECTS } from \"./constants\";\n\n/**\n * Polyfills https://html.spec.whatwg.org/multipage/interaction.html#drag-data-store-mode\n */\nexport const enum DragDataStoreMode {\n    _DISCONNECTED, // adding an extra mode here because we need a special state to disconnect the data store from dataTransfer instance\n    READONLY,\n    READWRITE,\n    PROTECTED\n}\n\n/**\n * Polyfills https://html.spec.whatwg.org/multipage/interaction.html#the-drag-data-store\n */\nexport interface DragDataStore {\n    mode:DragDataStoreMode;\n    data:{ [type:string]:any };\n    types:Array<string>;\n    effectAllowed:string;\n}\n\n/**\n * Polyfills https://html.spec.whatwg.org/multipage/interaction.html#datatransfer\n */\nexport class DataTransfer {\n\n    private _dropEffect:string = DROP_EFFECTS[ DROP_EFFECT.NONE ];\n\n    public get dropEffect() {\n        return this._dropEffect;\n    }\n\n    //public get files():FileList {\n    //    return undefined;\n    //}\n    //\n    //public get items():DataTransferItemList {\n    //    return undefined;\n    //}\n\n    public set dropEffect( value ) {\n        if( this._dataStore.mode !== DragDataStoreMode._DISCONNECTED\n            && ALLOWED_EFFECTS.indexOf( value ) > -1 ) {\n            this._dropEffect = value;\n        }\n    }\n\n    public get types():ReadonlyArray<string> {\n        if( this._dataStore.mode !== DragDataStoreMode._DISCONNECTED ) {\n            return Object.freeze( this._dataStore.types );\n        }\n    }\n\n    public get effectAllowed() {\n        return this._dataStore.effectAllowed;\n    }\n\n    public set effectAllowed( value ) {\n        if( this._dataStore.mode === DragDataStoreMode.READWRITE\n            && ALLOWED_EFFECTS.indexOf( value ) > -1 ) {\n            this._dataStore.effectAllowed = value;\n        }\n    }\n\n    constructor( private _dataStore:DragDataStore,\n                 private _setDragImageHandler:( image:Element, x:number, y:number ) => void ) {\n    }\n\n    public setData( type:string, data:string ):void {\n        if( this._dataStore.mode === DragDataStoreMode.READWRITE ) {\n\n            if( type.indexOf( \" \" ) > -1 ) {\n                throw new Error( \"illegal arg: type contains space\" );\n            }\n\n            this._dataStore.data[ type ] = data;\n\n            if( this._dataStore.types.indexOf( type ) === -1 ) {\n                this._dataStore.types.push( type );\n            }\n        }\n    }\n\n    public getData( type:string ):string {\n        if( this._dataStore.mode === DragDataStoreMode.READONLY\n            || this._dataStore.mode === DragDataStoreMode.READWRITE ) {\n            return this._dataStore.data[ type ] || \"\";\n        }\n    }\n\n    public clearData( format?:string ):void {\n        if( this._dataStore.mode === DragDataStoreMode.READWRITE ) {\n            // delete data for format\n            if( format && this._dataStore.data[ format ] ) {\n                delete this._dataStore.data[ format ];\n                var index = this._dataStore.types.indexOf( format );\n                if( index > -1 ) {\n                    this._dataStore.types.splice( index, 1 );\n                }\n                return;\n            }\n            // delete all data\n            this._dataStore.data = {};\n            this._dataStore.types = [];\n        }\n    }\n\n    public setDragImage( image:Element, x:number, y:number ):void {\n        if( this._dataStore.mode === DragDataStoreMode.READWRITE ) {\n            this._setDragImageHandler( image, x, y );\n        }\n    }\n}\n","import { ALLOWED_EFFECTS, DROP_EFFECT, DROP_EFFECTS, EFFECT_ALLOWED } from \"./constants\";\nimport { DataTransfer, DragDataStore, DragDataStoreMode } from \"./drag-data-store\";\n\n/**\n * Search for a possible draggable item upon an event that can initialize a drag operation.\n * Can be overridden in polyfill config.\n */\nexport function tryFindDraggableTarget( event:TouchEvent ):HTMLElement | undefined {\n\n    //1. Determine what is being dragged, as follows:\n\n    // THIS IS SKIPPED SINCE SUPPORT IS ONLY AVAILABLE FOR DOM ELEMENTS\n    // If the drag operation was invoked on a selection, then it is the selection that is being dragged.\n    //if( (<Element>event.target).nodeType === 3 ) {\n    //\n    //    config.log( \"drag on text\" );\n    //    return <Element>event.target;\n    //}\n    //Otherwise, if the drag operation was invoked on a Document, it is the first element, going up the ancestor chain, starting at the node that the\n    // user tried to drag, that has the IDL attribute draggable set to true.\n    //else {\n\n    let el = <HTMLElement>event.target;\n\n    do {\n        if( el.draggable === false ) {\n            continue;\n        }\n        if( el.draggable === true ) {\n            return el;\n        }\n        if( el.getAttribute\n            && el.getAttribute( \"draggable\" ) === \"true\" ) {\n            return el;\n        }\n    } while( (el = <HTMLElement>el.parentNode) && el !== document.body );\n}\n\n/**\n * Implements \"6.\" in the processing steps defined for a dnd event\n * https://html.spec.whatwg.org/multipage/interaction.html#dragevent\n */\nexport function determineDropEffect( effectAllowed:string, sourceNode:Element ) {\n\n    // uninitialized\n    if( !effectAllowed ) {\n\n        // THIS IS SKIPPED SINCE SUPPORT IS ONLY AVAILABLE FOR DOM ELEMENTS\n        //if( sourceNode.nodeType === 1 ) {\n        //\n        //return \"move\";\n        //}\n\n        // link\n        if( sourceNode.nodeType === 3 && (<HTMLElement>sourceNode).tagName === \"A\" ) {\n            return DROP_EFFECTS[ DROP_EFFECT.LINK ];\n        }\n\n        // copy\n        return DROP_EFFECTS[ DROP_EFFECT.COPY ];\n    }\n\n    // none\n    if( effectAllowed === ALLOWED_EFFECTS[ EFFECT_ALLOWED.NONE ] ) {\n        return DROP_EFFECTS[ DROP_EFFECT.NONE ];\n    }\n    // copy or all\n    if( effectAllowed.indexOf( ALLOWED_EFFECTS[ EFFECT_ALLOWED.COPY ] ) === 0 || effectAllowed === ALLOWED_EFFECTS[ EFFECT_ALLOWED.ALL ] ) {\n        return DROP_EFFECTS[ DROP_EFFECT.COPY ];\n    }\n    // link\n    if( effectAllowed.indexOf( ALLOWED_EFFECTS[ EFFECT_ALLOWED.LINK ] ) === 0 ) {\n        return DROP_EFFECTS[ DROP_EFFECT.LINK ];\n    }\n    // move\n    if( effectAllowed === ALLOWED_EFFECTS[ EFFECT_ALLOWED.MOVE ] ) {\n        return DROP_EFFECTS[ DROP_EFFECT.MOVE ];\n    }\n\n    // copy\n    return DROP_EFFECTS[ DROP_EFFECT.COPY ];\n}\n\nfunction createDragEventFromTouch( targetElement:Element,\n                                   e:TouchEvent,\n                                   type:string,\n                                   cancelable:boolean,\n                                   window:Window,\n                                   dataTransfer:DataTransfer,\n                                   relatedTarget:Element = null ) {\n\n    const touch:Touch = e.changedTouches[ 0 ];\n\n    const dndEvent:DragEvent = new Event( type, {\n        bubbles: true,\n        cancelable: cancelable\n    } ) as DragEvent;\n\n    // cast our polyfill\n    (dndEvent as any).dataTransfer = dataTransfer as any;\n    (dndEvent as any).relatedTarget = relatedTarget;\n\n    // set the coordinates\n    (dndEvent as any).screenX = touch.screenX;\n    (dndEvent as any).screenY = touch.screenY;\n    (dndEvent as any).clientX = touch.clientX;\n    (dndEvent as any).clientY = touch.clientY;\n    (dndEvent as any).pageX = touch.pageX;\n    (dndEvent as any).pageY = touch.pageY;\n\n    const targetRect = targetElement.getBoundingClientRect();\n    (dndEvent as any).offsetX = dndEvent.clientX - targetRect.left;\n    (dndEvent as any).offsetY = dndEvent.clientY - targetRect.top;\n\n    return dndEvent;\n}\n\n/**\n * Reference https://html.spec.whatwg.org/multipage/interaction.html#dndevents\n */\nexport function dispatchDragEvent( dragEvent:string,\n                                   targetElement:Element,\n                                   touchEvent:TouchEvent,\n                                   dataStore:DragDataStore,\n                                   dataTransfer:DataTransfer,\n                                   cancelable:boolean = true,\n                                   relatedTarget:Element | null = null ):boolean {\n\n    console.log( \"dnd-poly: dispatching \" + dragEvent );\n\n    // if( DEBUG ) {\n    //     const debug_class = CLASS_PREFIX + \"debug\",\n    //         debug_class_event_target = CLASS_PREFIX + \"event-target\",\n    //         debug_class_event_related_target = CLASS_PREFIX + \"event-related-target\";\n    //     targetElement.classList.add( debug_class );\n    //     targetElement.classList.add( debug_class_event_target );\n    //     if( relatedTarget ) {\n    //         relatedTarget.classList.add( debug_class );\n    //         relatedTarget.classList.add( debug_class_event_related_target );\n    //     }\n    // }\n\n    const leaveEvt = createDragEventFromTouch( targetElement, touchEvent, dragEvent, cancelable, document.defaultView, dataTransfer, relatedTarget );\n    const cancelled = !targetElement.dispatchEvent( leaveEvt );\n\n    dataStore.mode = DragDataStoreMode._DISCONNECTED;\n\n    // if( DEBUG ) {\n    //     const debug_class_event_target = CLASS_PREFIX + \"event-target\",\n    //         debug_class_event_related_target = CLASS_PREFIX + \"event-related-target\";\n    //     targetElement.classList.remove( debug_class_event_target );\n    //     if( relatedTarget ) {\n    //         relatedTarget.classList.remove( debug_class_event_related_target );\n    //     }\n    // }\n\n    return cancelled;\n}\n\n/**\n * according to https://html.spec.whatwg.org/multipage/interaction.html#drag-and-drop-processing-model\n */\nexport function determineDragOperation( effectAllowed:string, dropEffect:string ):string {\n\n    // unitialized or all\n    if( !effectAllowed || effectAllowed === ALLOWED_EFFECTS[ 7 ] ) {\n        return dropEffect;\n    }\n\n    if( dropEffect === DROP_EFFECTS[ DROP_EFFECT.COPY ] ) {\n        if( effectAllowed.indexOf( DROP_EFFECTS[ DROP_EFFECT.COPY ] ) === 0 ) {\n            return DROP_EFFECTS[ DROP_EFFECT.COPY ];\n        }\n    }\n    else if( dropEffect === DROP_EFFECTS[ DROP_EFFECT.LINK ] ) {\n        if( effectAllowed.indexOf( DROP_EFFECTS[ DROP_EFFECT.LINK ] ) === 0 || effectAllowed.indexOf( \"Link\" ) > -1 ) {\n            return DROP_EFFECTS[ DROP_EFFECT.LINK ];\n        }\n    }\n    else if( dropEffect === DROP_EFFECTS[ DROP_EFFECT.MOVE ] ) {\n        if( effectAllowed.indexOf( DROP_EFFECTS[ DROP_EFFECT.MOVE ] ) === 0 || effectAllowed.indexOf( \"Move\" ) > -1 ) {\n            return DROP_EFFECTS[ DROP_EFFECT.MOVE ];\n        }\n    }\n\n    return DROP_EFFECTS[ DROP_EFFECT.NONE ];\n}\n","import { Config } from \"../index\";\nimport {\n    CLASS_DRAG_IMAGE, CLASS_DRAG_OPERATION_ICON, CLASS_PREFIX, DROP_EFFECT, DROP_EFFECTS\n} from \"./constants\";\nimport {\n    addDocumentListener, applyDragImageSnapback, extractTransformStyles, isDOMElement,\n    isTouchIdentifierContainedInTouchEvent, Point, removeDocumentListener, translateElementToPoint,\n    updateCentroidCoordinatesOfTouchesIn\n} from \"./dom-utils\";\nimport { DataTransfer, DragDataStore, DragDataStoreMode } from \"./drag-data-store\";\nimport { determineDragOperation, determineDropEffect, dispatchDragEvent } from \"./drag-utils\";\n\n/**\n * For tracking the different states of a drag operation.\n */\nexport const enum DragOperationState {\n    // initial state of a controller, if no movement is detected the operation ends with this state\n    POTENTIAL,\n    // after movement is detected the drag operation starts and keeps this state until it ends\n    STARTED,\n    // when the drag operation ended normally\n    ENDED,\n    // when the drag operation ended with a cancelled input event\n    CANCELLED\n}\n\n/**\n * Aims to implement the HTML5 d'n'd spec (https://html.spec.whatwg.org/multipage/interaction.html#dnd) as close as it can get.\n * Note that all props that are private should start with an underscore to enable better minification.\n *\n * TODO remove lengthy spec comments in favor of short references to the spec\n */\nexport class DragOperationController {\n\n    private _dragOperationState:DragOperationState = DragOperationState.POTENTIAL;\n\n    private _dragImage:HTMLElement;\n    private _dragImageTransforms:string[];\n    private _dragImagePageCoordinates:Point; // the current page coordinates of the dragImage\n    private _dragImageOffset:Point; // offset of the drag image relative to the coordinates\n\n    private _currentHotspotCoordinates:Point;    // the point relative to viewport for determining the immediate user selection\n\n    private _immediateUserSelection:HTMLElement = null;  // the element the user currently hovers while dragging\n    private _currentDropTarget:HTMLElement = null;   // the element that was selected as a valid drop target by the d'n'd operation\n\n    private _dragDataStore:DragDataStore;\n    private _dataTransfer:DataTransfer;\n\n    private _currentDragOperation:string;    // the current drag operation set according to the d'n'd processing model\n\n    private _initialTouch:Touch;  // the identifier for the touch that initiated the drag operation\n    private _touchMoveHandler:EventListener;\n    private _touchEndOrCancelHandler:EventListener;\n    private _lastTouchEvent:TouchEvent;\n\n    private _iterationLock:boolean;\n    private _iterationIntervalId:number;\n\n    constructor( private _initialEvent:TouchEvent,\n                 private _config:Config,\n                 private _sourceNode:HTMLElement,\n                 private _dragOperationEndedCb:( config:Config, event:TouchEvent, state:DragOperationState ) => void ) {\n\n        console.log( \"dnd-poly: setting up potential drag operation..\" );\n\n        this._lastTouchEvent = _initialEvent;\n        this._initialTouch = _initialEvent.changedTouches[ 0 ];\n\n        // create bound event listeners\n        this._touchMoveHandler = this._onTouchMove.bind( this );\n        this._touchEndOrCancelHandler = this._onTouchEndOrCancel.bind( this );\n        addDocumentListener( \"touchmove\", this._touchMoveHandler, false );\n        addDocumentListener( \"touchend\", this._touchEndOrCancelHandler, false );\n        addDocumentListener( \"touchcancel\", this._touchEndOrCancelHandler, false );\n\n        // the only thing we do is setup the touch listeners. if drag will really start is decided in touch move handler.\n\n        //<spec>\n\n        // THIS IS SKIPPED SINCE SUPPORT IS ONLY AVAILABLE FOR DOM ELEMENTS\n        // 3. Establish which DOM node is the source node, as follows:\n        // If it is a selection that is being dragged, then the source node is the text node that the user started the drag on (typically the text node\n        // that the user originally clicked). If the user did not specify a particular node, for example if the user just told the user agent to begin\n        // a drag of \"the selection\", then the source node is the first text node containing a part of the selection.  Otherwise, if it is an element\n        // that is being dragged, then the source node is the element that is being dragged.  Otherwise, the source node is part of another document or\n        // application. When this specification requires that an event be dispatched at the source node in this case, the user agent must instead\n        // follow the platform-specific conventions relevant to that situation.\n\n        // THIS IS SKIPPED SINCE SUPPORT IS ONLY AVAILABLE FOR DOM ELEMENTS\n        // 4. Determine the list of dragged nodes, as follows:\n\n        //    If it is a selection that is being dragged, then the list of dragged nodes contains, in tree order, every node that is partially or\n        // completely included in the selection (including all their ancestors).\n\n        //    Otherwise, the list of dragged nodes contains only the source node, if any.\n\n        // THIS IS SKIPPED SINCE SUPPORT IS ONLY AVAILABLE FOR DOM ELEMENTS\n        // 5. If it is a selection that is being dragged, then add an item to the drag data store item list, with its properties set as follows:\n\n        //The drag data item type string\n        //\"text/plain\"\n        //The drag data item kind\n        //Plain Unicode string\n        //The actual data\n        //The text of the selection\n        //Otherwise, if any files are being dragged, then add one item per file to the drag data store item list, with their properties set as follows:\n        //\n        //The drag data item type string\n        //The MIME type of the file, if known, or \"application/octet-stream\" otherwise.\n        //    The drag data item kind\n        //File\n        //The actual data\n        //The file's contents and name.\n        //Dragging files can currently only happen from outside a browsing context, for example from a file system manager application.\n        //\n        //    If the drag initiated outside of the application, the user agent must add items to the drag data store item list as appropriate for the data\n        // being dragged, honoring platform conventions where appropriate; however, if the platform conventions do not use MIME types to label dragged\n        // data, the user agent must make a best-effort attempt to map the types to MIME types, and, in any case, all the drag data item type strings must\n        // be converted to ASCII lowercase.  Perform drag-and-drop initialization steps defined in any other applicable specifications.\n\n        //</spec>\n    }\n\n    //<editor-fold desc=\"setup/teardown\">\n\n    /**\n     * Setup dragImage, input listeners and the drag\n     * and drop process model iteration interval.\n     */\n    private _setup():boolean {\n        console.log( \"dnd-poly: starting drag and drop operation\" );\n\n        this._dragOperationState = DragOperationState.STARTED;\n\n        this._currentDragOperation = DROP_EFFECTS[ DROP_EFFECT.NONE ];\n\n        this._dragDataStore = {\n            data: {},\n            effectAllowed: undefined,\n            mode: DragDataStoreMode.PROTECTED,\n            types: [],\n        };\n\n        this._currentHotspotCoordinates = {\n            x: null,\n            y: null\n        };\n\n        this._dragImagePageCoordinates = {\n            x: null,\n            y: null\n        };\n\n        let dragImageSrc:HTMLElement = this._sourceNode;\n\n        this._dataTransfer = new DataTransfer( this._dragDataStore, ( element:HTMLElement, x:number, y:number ) => {\n\n            dragImageSrc = element;\n\n            if( typeof x === \"number\" || typeof y === \"number\" ) {\n                this._dragImageOffset = {\n                    x: x || 0,\n                    y: y || 0\n                };\n            }\n        } );\n\n        // 9. Fire a DND event named dragstart at the source node.\n        this._dragDataStore.mode = DragDataStoreMode.READWRITE;\n        this._dataTransfer.dropEffect = DROP_EFFECTS[ DROP_EFFECT.NONE ];\n        if( dispatchDragEvent( \"dragstart\", this._sourceNode, this._lastTouchEvent, this._dragDataStore, this._dataTransfer ) ) {\n            console.log( \"dnd-poly: dragstart cancelled\" );\n            // dragstart has been prevented -> cancel d'n'd\n            this._dragOperationState = DragOperationState.CANCELLED;\n            this._cleanup();\n            return false;\n        }\n\n        updateCentroidCoordinatesOfTouchesIn( \"page\", this._lastTouchEvent, this._dragImagePageCoordinates );\n        const dragImage = this._config.dragImageSetup( dragImageSrc );\n        this._dragImageTransforms = extractTransformStyles( dragImage );\n        // set layout styles for freely moving it around\n        dragImage.style.position = \"absolute\";\n        dragImage.style.left = \"0px\";\n        dragImage.style.top = \"0px\";\n        // on top of all\n        dragImage.style.zIndex = \"999999\";\n\n        // add polyfill class for default styling\n        dragImage.classList.add( CLASS_DRAG_IMAGE );\n        dragImage.classList.add( CLASS_DRAG_OPERATION_ICON );\n        this._dragImage = dragImage;\n\n        if( !this._dragImageOffset ) {\n\n            // apply specific offset\n            if( this._config.dragImageOffset ) {\n\n                this._dragImageOffset = {\n                    x: this._config.dragImageOffset.x,\n                    y: this._config.dragImageOffset.y\n                };\n            }\n            // center drag image on touch coordinates\n            else if( this._config.dragImageCenterOnTouch ) {\n\n                const cs = getComputedStyle( dragImageSrc );\n                this._dragImageOffset = {\n                    x: 0 - parseInt( cs.marginLeft, 10 ),\n                    y: 0 - parseInt( cs.marginTop, 10 )\n                };\n            }\n            // by default initialize drag image offset the same as desktop\n            else {\n\n                const targetRect = dragImageSrc.getBoundingClientRect();\n                const cs = getComputedStyle( dragImageSrc );\n                this._dragImageOffset = {\n                    x: targetRect.left - this._initialTouch.clientX - parseInt( cs.marginLeft, 10 ) + targetRect.width / 2,\n                    y: targetRect.top - this._initialTouch.clientY - parseInt( cs.marginTop, 10 ) + targetRect.height / 2\n                };\n            }\n        }\n\n        translateElementToPoint( this._dragImage, this._dragImagePageCoordinates, this._dragImageTransforms, this._dragImageOffset, this._config.dragImageCenterOnTouch );\n        document.body.appendChild( this._dragImage );\n\n        // 10. Initiate the drag-and-drop operation in a manner consistent with platform conventions, and as described below.\n        this._iterationIntervalId = window.setInterval( () => {\n\n            // If the user agent is still performing the previous iteration of the sequence (if any) when the next iteration becomes due,\n            // abort these steps for this iteration (effectively \"skipping missed frames\" of the drag-and-drop operation).\n            if( this._iterationLock ) {\n                console.log( \"dnd-poly: iteration skipped because previous iteration hast not yet finished.\" );\n                return;\n            }\n            this._iterationLock = true;\n\n            this._dragAndDropProcessModelIteration();\n\n            this._iterationLock = false;\n        }, this._config.iterationInterval );\n\n        return true;\n    }\n\n    private _cleanup() {\n\n        console.log( \"dnd-poly: cleanup\" );\n\n        if( this._iterationIntervalId ) {\n            clearInterval( this._iterationIntervalId );\n            this._iterationIntervalId = null;\n        }\n\n        removeDocumentListener( \"touchmove\", this._touchMoveHandler );\n        removeDocumentListener( \"touchend\", this._touchEndOrCancelHandler );\n        removeDocumentListener( \"touchcancel\", this._touchEndOrCancelHandler );\n\n        if( this._dragImage ) {\n            this._dragImage.parentNode.removeChild( this._dragImage );\n            this._dragImage = null;\n        }\n\n        this._dragOperationEndedCb( this._config, this._lastTouchEvent, this._dragOperationState );\n    }\n\n    //</editor-fold>\n\n    //<editor-fold desc=\"touch handlers\">\n\n    private _onTouchMove( event:TouchEvent ) {\n\n        // filter unrelated touches\n        if( isTouchIdentifierContainedInTouchEvent( event, this._initialTouch.identifier ) === false ) {\n            return;\n        }\n\n        // update the reference to the last received touch event\n        this._lastTouchEvent = event;\n\n        // drag operation did not start yet but on movement it should start\n        if( this._dragOperationState === DragOperationState.POTENTIAL ) {\n\n            let startDrag:boolean;\n\n            // is a lifecycle hook present?\n            if( this._config.dragStartConditionOverride ) {\n\n                try {\n                    startDrag = this._config.dragStartConditionOverride( event );\n                }\n                catch( e ) {\n                    console.error( \"dnd-poly: error in dragStartConditionOverride hook: \" + e );\n                    startDrag = false;\n                }\n            }\n            else {\n\n                // by default only allow a single moving finger to initiate a drag operation\n                startDrag = (event.touches.length === 1);\n            }\n\n            if( !startDrag ) {\n\n                this._cleanup();\n                return;\n            }\n\n            // setup will return true when drag operation starts\n            if( this._setup() === true ) {\n\n                // prevent scrolling when drag operation starts\n                this._initialEvent.preventDefault();\n                event.preventDefault();\n            }\n\n            return;\n        }\n\n        console.log( \"dnd-poly: moving draggable..\" );\n\n        // we emulate d'n'd so we dont want any defaults to apply\n        event.preventDefault();\n\n        // populate shared coordinates from touch event\n        updateCentroidCoordinatesOfTouchesIn( \"client\", event, this._currentHotspotCoordinates );\n        updateCentroidCoordinatesOfTouchesIn( \"page\", event, this._dragImagePageCoordinates );\n\n        if( this._config.dragImageTranslateOverride ) {\n\n            try {\n\n                let handledDragImageTranslate = false;\n\n                this._config.dragImageTranslateOverride(\n                    event,\n                    {\n                        x: this._currentHotspotCoordinates.x,\n                        y: this._currentHotspotCoordinates.y\n                    },\n                    this._immediateUserSelection,\n                    ( offsetX:number, offsetY:number ) => {\n\n                        // preventing translation of drag image when there was a drag operation cleanup meanwhile\n                        if( !this._dragImage ) {\n                            return;\n                        }\n\n                        handledDragImageTranslate = true;\n\n                        this._currentHotspotCoordinates.x += offsetX;\n                        this._currentHotspotCoordinates.y += offsetY;\n                        this._dragImagePageCoordinates.x += offsetX;\n                        this._dragImagePageCoordinates.y += offsetY;\n\n                        translateElementToPoint(\n                            this._dragImage,\n                            this._dragImagePageCoordinates,\n                            this._dragImageTransforms,\n                            this._dragImageOffset,\n                            this._config.dragImageCenterOnTouch\n                        );\n                    }\n                );\n\n                if( handledDragImageTranslate ) {\n                    return;\n                }\n            }\n            catch( e ) {\n                console.log( \"dnd-poly: error in dragImageTranslateOverride hook: \" + e );\n            }\n        }\n\n        translateElementToPoint( this._dragImage, this._dragImagePageCoordinates, this._dragImageTransforms, this._dragImageOffset, this._config.dragImageCenterOnTouch );\n    }\n\n    private _onTouchEndOrCancel( event:TouchEvent ) {\n\n        // filter unrelated touches\n        if( isTouchIdentifierContainedInTouchEvent( event, this._initialTouch.identifier ) === false ) {\n            return;\n        }\n\n        // let the dragImageTranslateOverride know that its over\n        if( this._config.dragImageTranslateOverride ) {\n            try {\n                /* tslint:disable */\n                this._config.dragImageTranslateOverride( undefined, undefined, undefined, function() {\n                } );\n            }\n            catch( e ) {\n                console.log( \"dnd-poly: error in dragImageTranslateOverride hook: \" + e );\n            }\n        }\n\n        // drag operation did not even start\n        if( this._dragOperationState === DragOperationState.POTENTIAL ) {\n            this._cleanup();\n            return;\n        }\n\n        // we emulate d'n'd so we dont want any defaults to apply\n        event.preventDefault();\n\n        this._dragOperationState = (event.type === \"touchcancel\") ? DragOperationState.CANCELLED : DragOperationState.ENDED;\n    }\n\n    //</editor-fold>\n\n    //<editor-fold desc=\"dnd spec logic\">\n\n    /**\n     * according to https://html.spec.whatwg.org/multipage/interaction.html#drag-and-drop-processing-model\n     */\n    private _dragAndDropProcessModelIteration():void {\n\n        // if( DEBUG ) {\n        //     var debug_class = CLASS_PREFIX + \"debug\",\n        //         debug_class_user_selection = CLASS_PREFIX + \"immediate-user-selection\",\n        //         debug_class_drop_target = CLASS_PREFIX + \"current-drop-target\";\n        // }\n\n        const previousDragOperation = this._currentDragOperation;\n\n        // Fire a DND event named drag event at the source node.\n        this._dragDataStore.mode = DragDataStoreMode.PROTECTED;\n        this._dataTransfer.dropEffect = DROP_EFFECTS[ DROP_EFFECT.NONE ];\n        const dragCancelled = dispatchDragEvent( \"drag\", this._sourceNode, this._lastTouchEvent, this._dragDataStore, this._dataTransfer );\n        if( dragCancelled ) {\n            console.log( \"dnd-poly: drag event cancelled.\" );\n            // If this event is canceled, the user agent must set the current drag operation to \"none\" (no drag operation).\n            this._currentDragOperation = DROP_EFFECTS[ DROP_EFFECT.NONE ];\n        }\n\n        // Otherwise, if the user ended the drag-and-drop operation (e.g. by releasing the mouse button in a mouse-driven drag-and-drop interface),\n        // or if the drag event was canceled, then this will be the last iteration.\n        if( dragCancelled || this._dragOperationState === DragOperationState.ENDED || this._dragOperationState === DragOperationState.CANCELLED ) {\n\n            const dragFailed = this._dragOperationEnded( this._dragOperationState );\n\n            // if drag failed transition snap back\n            if( dragFailed ) {\n\n                applyDragImageSnapback( this._sourceNode, this._dragImage, this._dragImageTransforms, () => {\n                    this._finishDragOperation();\n                } );\n                return;\n            }\n\n            // Otherwise immediately\n            // Fire a DND event named dragend at the source node.\n            this._finishDragOperation();\n            return;\n        }\n\n        // If the drag event was not canceled and the user has not ended the drag-and-drop operation,\n        // check the state of the drag-and-drop operation, as follows:\n        const newUserSelection:HTMLElement = <HTMLElement>this._config.elementFromPoint( this._currentHotspotCoordinates.x, this._currentHotspotCoordinates.y );\n\n        console.log( \"dnd-poly: new immediate user selection is: \" + newUserSelection );\n\n        const previousTargetElement = this._currentDropTarget;\n\n        // If the user is indicating a different immediate user selection than during the last iteration (or if this is the first iteration),\n        // and if this immediate user selection is not the same as the current target element,\n        // then fire a DND event named dragexit at the current target element,\n        // and then update the current target element as follows:\n        if( newUserSelection !== this._immediateUserSelection && newUserSelection !== this._currentDropTarget ) {\n\n            // if( DEBUG ) {\n            //\n            //     if( this._immediateUserSelection ) {\n            //         this._immediateUserSelection.classList.remove( debug_class_user_selection );\n            //     }\n            //\n            //     if( newUserSelection ) {\n            //         newUserSelection.classList.add( debug_class );\n            //         newUserSelection.classList.add( debug_class_user_selection );\n            //     }\n            // }\n\n            this._immediateUserSelection = newUserSelection;\n\n            if( this._currentDropTarget !== null ) {\n                this._dragDataStore.mode = DragDataStoreMode.PROTECTED;\n                this._dataTransfer.dropEffect = DROP_EFFECTS[ DROP_EFFECT.NONE ];\n                dispatchDragEvent( \"dragexit\", this._currentDropTarget, this._lastTouchEvent, this._dragDataStore, this._dataTransfer, false );\n            }\n\n            // If the new immediate user selection is null\n            if( this._immediateUserSelection === null ) {\n                //Set the current target element to null also.\n                this._currentDropTarget = this._immediateUserSelection;\n\n                console.log( \"dnd-poly: current drop target changed to null\" );\n            }\n            // THIS IS SKIPPED SINCE SUPPORT IS ONLY AVAILABLE FOR DOM ELEMENTS\n            // If the new immediate user selection is in a non-DOM document or application\n            // else if() {\n            //      Set the current target element to the immediate user selection.\n            //      this.currentDropTarget = this.immediateUserSelection;\n            //      return;\n            // }\n            // Otherwise\n            else {\n                // Fire a DND event named dragenter at the immediate user selection.\n                //the polyfill cannot determine if a handler even exists as browsers do to silently\n                // allow drop when no listener existed, so this event MUST be handled by the client\n                this._dragDataStore.mode = DragDataStoreMode.PROTECTED;\n                this._dataTransfer.dropEffect = determineDropEffect( this._dragDataStore.effectAllowed, this._sourceNode );\n                if( dispatchDragEvent( \"dragenter\", this._immediateUserSelection, this._lastTouchEvent, this._dragDataStore, this._dataTransfer ) ) {\n                    console.log( \"dnd-poly: dragenter default prevented\" );\n                    // If the event is canceled, then set the current target element to the immediate user selection.\n                    this._currentDropTarget = this._immediateUserSelection;\n                    this._currentDragOperation = determineDragOperation( this._dataTransfer.effectAllowed, this._dataTransfer.dropEffect );\n                }\n                // Otherwise, run the appropriate step from the following list:\n                else {\n\n                    // NO DROPZONE SUPPORT SINCE NATIVE IMPLEMENTATIONS IN BROWSERS ALSO DO NOT\n                    //console.log( \"dnd-poly: dragenter not prevented, searching for dropzone..\" );\n                    //var newTarget = DragOperationController.FindDropzoneElement( this.immediateUserSelection );\n\n                    // THIS IS SKIPPED SINCE SUPPORT IS ONLY AVAILABLE FOR DOM ELEMENTS\n                    // If the current target element is a text field (e.g. textarea, or an input element whose type attribute is in the Text state) or an\n                    // editable element, and the drag data store item list has an item with the drag data item type string \"text/plain\" and the drag data\n                    // item kind Plain Unicode string\n                    //if( ElementIsTextDropzone( this.immediateUserSelection, this.dragDataStore ) ) {\n                    //Set the current target element to the immediate user selection anyway.\n                    //this.currentDropTarget = this.immediateUserSelection;\n                    //}\n                    //else\n                    // If the current target element is an element with a dropzone attribute that matches the drag data store\n                    //if( newTarget === this.immediateUserSelection &&\n                    //    DragOperationController.GetOperationForMatchingDropzone( this.immediateUserSelection, this.dragDataStore ) !== \"none\" ) {\n                    // Set the current target element to the immediate user selection anyway.\n                    //    this.currentDropTarget = this.immediateUserSelection;\n                    //}\n                    // If the immediate user selection is an element that itself has an ancestor element\n                    // with a dropzone attribute that matches the drag data store\n                    // NO DROPZONE SUPPORT SINCE NATIVE IMPLEMENTATIONS IN BROWSERS ALSO DO NOT\n                    //else if( newTarget !== null && DragOperationController.GetOperationForMatchingDropzone( newTarget, this.dragDataStore ) ) {\n\n                    // If the immediate user selection is new target, then leave the current target element unchanged.\n\n                    // Otherwise, fire a DND event named dragenter at new target, with the current target element\n                    // as the specific related target. Then, set the current target element to new target,\n                    // regardless of whether that event was canceled or not.\n                    //this.dragenter( newTarget, this.currentDropTarget );\n                    //this.currentDropTarget = newTarget;\n                    //}\n                    // If the current target element is not the body element\n                    //else\n                    if( this._immediateUserSelection !== document.body ) {\n                        // Fire a DND event named dragenter at the body element, and set the current target element to the body element, regardless of\n                        // whether that event was canceled or not.\n                        // Note: If the body element is null, then the event will be fired at the Document object (as\n                        // required by the definition of the body element), but the current target element would be set to null, not the Document object.\n\n                        // We do not listen to what the spec says here because this results in doubled events on the body/document because if the first one\n                        // was not cancelled it will have bubbled up to the body already ;)\n                        //  this.dragenter( window.document.body );\n                        this._currentDropTarget = document.body;\n                    }\n                    // Otherwise\n                    //else {\n                    // leave the current drop target unchanged\n                    //}\n                }\n            }\n        }\n\n        // If the previous step caused the current target element to change,\n        // and if the previous target element was not null or a part of a non-DOM document,\n        // then fire a DND event named dragleave at the previous target element.\n        if( previousTargetElement !== this._currentDropTarget && (isDOMElement( previousTargetElement )) ) {\n\n            // if( DEBUG ) {\n            //     previousTargetElement.classList.remove( debug_class_drop_target );\n            // }\n\n            console.log( \"dnd-poly: current drop target changed.\" );\n\n            this._dragDataStore.mode = DragDataStoreMode.PROTECTED;\n            this._dataTransfer.dropEffect = DROP_EFFECTS[ DROP_EFFECT.NONE ];\n            dispatchDragEvent( \"dragleave\", previousTargetElement, this._lastTouchEvent, this._dragDataStore, this._dataTransfer, false, this._currentDropTarget );\n        }\n\n        // If the current target element is a DOM element, then fire a DND event named dragover at this current target element.\n        if( isDOMElement( this._currentDropTarget ) ) {\n\n            // if( DEBUG ) {\n            //     this._currentDropTarget.classList.add( debug_class );\n            //     this._currentDropTarget.classList.add( debug_class_drop_target );\n            // }\n\n            // If the dragover event is not canceled, run the appropriate step from the following list:\n            this._dragDataStore.mode = DragDataStoreMode.PROTECTED;\n            this._dataTransfer.dropEffect = determineDropEffect( this._dragDataStore.effectAllowed, this._sourceNode );\n            if( dispatchDragEvent( \"dragover\", this._currentDropTarget, this._lastTouchEvent, this._dragDataStore, this._dataTransfer ) === false ) {\n\n                console.log( \"dnd-poly: dragover not prevented on possible drop-target.\" );\n                // NO DROPZONE SUPPORT SINCE NATIVE IMPLEMENTATIONS IN BROWSERS ALSO DO NOT\n\n                // THIS IS SKIPPED SINCE SUPPORT IS ONLY AVAILABLE FOR DOM ELEMENTS\n                // If the current target element is a text field (e.g. textarea, or an input element whose type attribute is in the Text state) or\n                // an editable element, and the drag data store item list has an item with the drag data item type string \"text/plain\" and the drag\n                // data item kind Plain Unicode string\n                //if( ElementIsTextDropzone( this.currentDropTarget, this.dragDataStore ) ) {\n                // Set the current drag operation to either \"copy\" or \"move\", as appropriate given the platform conventions.\n                //this.currentDragOperation = \"copy\"; //or move. spec says its platform specific behaviour.\n                //}\n                //else {\n                // If the current target element is an element with a dropzone attribute that matches the drag data store\n                //this.currentDragOperation = DragOperationController.GetOperationForMatchingDropzone( this.currentDropTarget, this.dragDataStore );\n                //}\n                // when dragover is not prevented and no dropzones are there, no drag operation\n                this._currentDragOperation = DROP_EFFECTS[ DROP_EFFECT.NONE ];\n            }\n            // Otherwise (if the dragover event is canceled), set the current drag operation based on the values of the effectAllowed and\n            // dropEffect attributes of the DragEvent object's dataTransfer object as they stood after the event dispatch finished\n            else {\n\n                console.log( \"dnd-poly: dragover prevented.\" );\n\n                this._currentDragOperation = determineDragOperation( this._dataTransfer.effectAllowed, this._dataTransfer.dropEffect );\n            }\n        }\n\n        console.log( \"dnd-poly: d'n'd iteration ended. current drag operation: \" + this._currentDragOperation );\n\n        // THIS IS SKIPPED SINCE SUPPORT IS ONLY AVAILABLE FOR DOM ELEMENTS\n        // Otherwise, if the current target element is not a DOM element, use platform-specific mechanisms to determine what drag operation is\n        // being performed (none, copy, link, or move), and set the current drag operation accordingly.\n\n        //Update the drag feedback (e.g. the mouse cursor) to match the current drag operation, as follows:\n        // ---------------------------------------------------------------------------------------------------------\n        // Drag operation   |\tFeedback\n        // \"copy\"\t        |  Data will be copied if dropped here.\n        // \"link\"\t        |  Data will be linked if dropped here.\n        // \"move\"\t        |  Data will be moved if dropped here.\n        // \"none\"\t        |  No operation allowed, dropping here will cancel the drag-and-drop operation.\n        // ---------------------------------------------------------------------------------------------------------\n\n        if( previousDragOperation !== this._currentDragOperation ) {\n            this._dragImage.classList.remove( CLASS_PREFIX + previousDragOperation );\n        }\n\n        const currentDragOperationClass = CLASS_PREFIX + this._currentDragOperation;\n\n        this._dragImage.classList.add( currentDragOperationClass );\n    }\n\n    /**\n     * according to https://html.spec.whatwg.org/multipage/interaction.html#drag-and-drop-processing-model\n     */\n    private _dragOperationEnded( state:DragOperationState ):boolean {\n\n        console.log( \"dnd-poly: drag operation end detected with \" + this._currentDragOperation );\n\n        // if( DEBUG ) {\n        //\n        //     var debug_class_user_selection = CLASS_PREFIX + \"immediate-user-selection\",\n        //         debug_class_drop_target = CLASS_PREFIX + \"current-drop-target\";\n        //\n        //     if( this._currentDropTarget ) {\n        //         this._currentDropTarget.classList.remove( debug_class_drop_target );\n        //\n        //     }\n        //     if( this._immediateUserSelection ) {\n        //         this._immediateUserSelection.classList.remove( debug_class_user_selection );\n        //     }\n        // }\n\n        //var dropped:boolean = undefined;\n\n        // Run the following steps, then stop the drag-and-drop operation:\n\n        // If the current drag operation is \"none\" (no drag operation), or,\n        // if the user ended the drag-and-drop operation by canceling it (e.g. by hitting the Escape key), or\n        // if the current target element is null, then the drag operation failed.\n        const dragFailed = (this._currentDragOperation === DROP_EFFECTS[ DROP_EFFECT.NONE ]\n            || this._currentDropTarget === null\n            || state === DragOperationState.CANCELLED);\n        if( dragFailed ) {\n\n            // Run these substeps:\n\n            // Let dropped be false.\n            //dropped = false;\n\n            // If the current target element is a DOM element, fire a DND event named dragleave at it;\n            if( isDOMElement( this._currentDropTarget ) ) {\n                this._dragDataStore.mode = DragDataStoreMode.PROTECTED;\n                this._dataTransfer.dropEffect = DROP_EFFECTS[ DROP_EFFECT.NONE ];\n                dispatchDragEvent( \"dragleave\", this._currentDropTarget, this._lastTouchEvent, this._dragDataStore, this._dataTransfer, false );\n            }\n\n            // THIS IS SKIPPED SINCE SUPPORT IS ONLY AVAILABLE FOR DOM ELEMENTS\n            // otherwise, if it is not null, use platform-specific conventions for drag cancellation.\n            //else if( this.currentDropTarget !== null ) {\n            //}\n        }\n        // Otherwise, the drag operation was as success; run these substeps:\n        else {\n\n            // Let dropped be true.\n            //dropped = true;\n\n            // If the current target element is a DOM element, fire a DND event named drop at it;\n            if( isDOMElement( this._currentDropTarget ) ) {\n\n                // If the event is canceled, set the current drag operation to the value of the dropEffect attribute of the\n                // DragEvent object's dataTransfer object as it stood after the event dispatch finished.\n\n                this._dragDataStore.mode = DragDataStoreMode.READONLY;\n                this._dataTransfer.dropEffect = this._currentDragOperation;\n                if( dispatchDragEvent( \"drop\", this._currentDropTarget, this._lastTouchEvent, this._dragDataStore, this._dataTransfer ) ===\n                    true ) {\n\n                    this._currentDragOperation = this._dataTransfer.dropEffect;\n                }\n                // Otherwise, the event is not canceled; perform the event's default action, which depends on the exact target as follows:\n                else {\n\n                    // THIS IS SKIPPED SINCE SUPPORT IS ONLY AVAILABLE FOR DOM ELEMENTS\n                    // If the current target element is a text field (e.g. textarea, or an input element whose type attribute is in the Text state)\n                    // or an editable element,\n                    // and the drag data store item list has an item with the drag data item type string \"text/plain\"\n                    // and the drag data item kind Plain Unicode string\n                    //if( ElementIsTextDropzone( this.currentDropTarget, this.dragDataStore ) ) {\n                    // Insert the actual data of the first item in the drag data store item list to have a drag data item type string of\n                    // \"text/plain\" and a drag data item kind that is Plain Unicode string into the text field or editable element in a manner\n                    // consistent with platform-specific conventions (e.g. inserting it at the current mouse cursor position, or inserting it at\n                    // the end of the field).\n                    //}\n                    // Otherwise\n                    //else {\n                    // Reset the current drag operation to \"none\".\n                    this._currentDragOperation = DROP_EFFECTS[ DROP_EFFECT.NONE ];\n                    //}\n                }\n            }\n            // THIS IS SKIPPED SINCE SUPPORT IS ONLY AVAILABLE FOR DOM ELEMENTS\n            // otherwise, use platform-specific conventions for indicating a drop.\n            //else {\n            //}\n        }\n\n        return dragFailed;\n\n        // THIS IS SKIPPED SINCE SUPPORT IS ONLY AVAILABLE FOR DOM ELEMENTS\n        //if( this.dragend( this.sourceNode ) ) {\n        //    return;\n        //}\n\n        // Run the appropriate steps from the following list as the default action of the dragend event:\n\n        //if( !dropped ) {\n        //    return;\n        //}\n        // dropped is true\n\n        //if( this.currentDragOperation !== \"move\" ) {\n        //    return;\n        //}\n        //// drag operation is move\n        //\n        //if( ElementIsTextDropzone( this.currentDropTarget ) === false ) {\n        //    return;\n        //}\n        //// element is textfield\n        //\n        //// and the source of the drag-and-drop operation is a selection in the DOM\n        //if( this.sourceNode.nodeType === 1 ) {\n        //    // The user agent should delete the range representing the dragged selection from the DOM.\n        //}\n        //// and the source of the drag-and-drop operation is a selection in a text field\n        //else if( this.sourceNode.nodeType === 3 ) {\n        //    // The user agent should delete the dragged selection from the relevant text field.\n        //}\n        //// Otherwise, The event has no default action.\n    }\n\n    // dispatch dragend event and cleanup drag operation\n    private _finishDragOperation():void {\n        console.log( \"dnd-poly: dragimage snap back transition ended\" );\n\n        // Fire a DND event named dragend at the source node.\n        this._dragDataStore.mode = DragDataStoreMode.PROTECTED;\n        this._dataTransfer.dropEffect = this._currentDragOperation;\n        dispatchDragEvent( \"dragend\", this._sourceNode, this._lastTouchEvent, this._dragDataStore, this._dataTransfer, false );\n\n        // drag operation over and out\n        this._dragOperationState = DragOperationState.ENDED;\n        this._cleanup();\n    }\n\n    //</editor-fold>\n}\n","import { addDocumentListener, createDragImage, onEvt, Point } from \"./internal/dom-utils\";\nimport { DragOperationController, DragOperationState } from \"./internal/drag-operation-controller\";\nimport { tryFindDraggableTarget } from \"./internal/drag-utils\";\nimport { detectFeatures } from \"./internal/feature-detection\";\nimport { EVENT_DRAG_DRAGSTART_PENDING, EVENT_DRAG_DRAGSTART_CANCEL } from \"./internal/constants\";\n\n// default config\nconst config:Config = {\n    iterationInterval: 150,\n    tryFindDraggableTarget: tryFindDraggableTarget,\n    dragImageSetup: createDragImage,\n    elementFromPoint: function( x, y ) { return document.elementFromPoint( x, y ); }\n};\n\n// reference to the currently active drag operation\nlet activeDragOperation:DragOperationController;\n\n/**\n * event handler for initial touch events that possibly start a drag and drop operation.\n */\nfunction onTouchstart( e:TouchEvent ) {\n\n    console.log( \"dnd-poly: global touchstart\" );\n\n    // From the moment that the user agent is to initiate the drag-and-drop operation,\n    // until the end of the drag-and-drop operation, device input events (e.g. mouse and keyboard events) must be suppressed.\n\n    // only allow one drag operation at a time\n    if( activeDragOperation ) {\n        console.log( \"dnd-poly: drag operation already active\" );\n        return;\n    }\n\n    let dragTarget = config.tryFindDraggableTarget( e );\n\n    // If there is no such element, then nothing is being dragged; abort these\n    // steps, the drag-and-drop operation is never started.\n    if( !dragTarget ) {\n        console.log(\"dnd-poly: no draggable at touchstart coordinates\");\n        return;\n    }\n\n    try {\n        activeDragOperation = new DragOperationController( e, config, dragTarget as HTMLElement, dragOperationEnded );\n    }\n    catch( err ) {\n        dragOperationEnded( config, e, DragOperationState.CANCELLED );\n        // rethrow exception after cleanup\n        throw err;\n    }\n}\n\nfunction onDelayTouchstart( evt:TouchEvent ) {\n\n    console.log(\"dnd-poly: setup delayed dragstart..\");\n\n    const el = evt.target;\n\n    const heldItem = () => {\n\n        console.log(\"dnd-poly: starting delayed drag..\");\n\n        end.off();\n        cancel.off();\n        move.off();\n        scroll.off();\n        onTouchstart( evt );\n    };\n\n    const onReleasedItem = (event:Event) => {\n\n        console.log(\"dnd-poly: aborting delayed drag because of \" + event.type);\n\n        end.off();\n        cancel.off();\n        move.off();\n        scroll.off();\n\n        if (el) {\n            el.dispatchEvent(new CustomEvent(EVENT_DRAG_DRAGSTART_CANCEL, { bubbles: true, cancelable: true }));\n        }\n\n        clearTimeout( timer );\n    };\n\n    if (el) {\n        el.dispatchEvent(new CustomEvent(EVENT_DRAG_DRAGSTART_PENDING, { bubbles: true, cancelable: true }));\n    }\n\n    const timer = window.setTimeout( heldItem, config.holdToDrag );\n\n    const end = onEvt( el, \"touchend\", onReleasedItem );\n    const cancel = onEvt( el, \"touchcancel\", onReleasedItem );\n    const move = onEvt( el, \"touchmove\", onReleasedItem );\n    // scroll events don't bubble, only way to listen to scroll events\n    // that are about to happen in nested scrollables is by listening in capture phase\n    const scroll = onEvt( window, \"scroll\", onReleasedItem, true );\n}\n\n/**\n * Implements callback invoked when a drag operation has ended or crashed.\n */\nfunction dragOperationEnded( _config:Config, event:TouchEvent, state:DragOperationState ) {\n\n    // we need to make the default action happen only when no drag operation took place\n    if( state === DragOperationState.POTENTIAL ) {\n\n        console.log( \"dnd-poly: Drag never started. Last event was \" + event.type );\n\n        // when lifecycle hook is present\n        if( _config.defaultActionOverride ) {\n\n            try {\n\n                _config.defaultActionOverride( event );\n\n                if( event.defaultPrevented ) {\n\n                    console.log( \"dnd-poly: defaultActionOverride has taken care of triggering the default action. preventing default on original event\" );\n                }\n\n            }\n            catch( e ) {\n\n                console.log( \"dnd-poly: error in defaultActionOverride: \" + e );\n            }\n        }\n    }\n\n    // reset drag operation container\n    activeDragOperation = null;\n}\n\n//<editor-fold desc=\"public api\">\n\nexport { Point } from \"./internal/dom-utils\";\n\n// function signature for the dragImageTranslateOverride hook\nexport type DragImageTranslateOverrideFn = ( // corresponding touchmove event\n    event:TouchEvent,\n    // the processed touch event viewport coordinates\n    hoverCoordinates:Point,\n    // the element under the calculated touch coordinates\n    hoveredElement:HTMLElement,\n    // callback for updating the drag image offset\n    translateDragImageFn:( offsetX:number, offsetY:number ) => void ) => void;\n\nexport interface Config {\n\n    // flag to force the polyfill being applied and not rely on internal feature detection\n    forceApply?:boolean;\n\n    // useful for when you want the default drag image but still want to apply\n    // some static offset from touch coordinates to drag image coordinates\n    // defaults to (0,0)\n    dragImageOffset?:Point;\n\n    // if the dragImage shall be centered on the touch coordinates\n    // defaults to false\n    dragImageCenterOnTouch?:boolean;\n\n    // the drag and drop operation involves some processing. here you can specify in what interval this processing takes place.\n    // defaults to 150ms\n    iterationInterval?:number;\n\n    // hook for custom logic that decides if a drag operation should start\n    dragStartConditionOverride?:( event:TouchEvent ) => boolean;\n\n    // hook for custom logic that can manipulate the drag image translate offset\n    dragImageTranslateOverride?:DragImageTranslateOverrideFn;\n\n    // hook for custom logic that can override the default action based on the original touch event when the drag never started\n    // be sure to call event.preventDefault() if handling the default action in the override to prevent the browser default.\n    defaultActionOverride?:( event:TouchEvent ) => void;\n\n    // Drag action delay on touch devices (\"hold to drag\" functionality, useful for scrolling draggable items). Defaults to no delay.\n    holdToDrag?:number;\n\n    // function invoked for each touchstart event to determine if and which touched element is detected as \"draggable\"\n    tryFindDraggableTarget?:( event:TouchEvent ) => HTMLElement | undefined;\n\n    // function for creating a copy of the dragged element\n    dragImageSetup?:( element:HTMLElement ) => HTMLElement;\n\n    // function for determining element that is currently hovered while dragging\n    // defaults to `document.elementFromPoint()`\n    elementFromPoint?:( x:number, y:number ) => Element;\n}\n\nexport function polyfill( override?:Config ):boolean {\n\n    if( override ) {\n        // overwrite default config with user config\n        Object.keys( override ).forEach( function( key ) {\n            config[ key ] = override[ key ];\n        } );\n    }\n\n    // only do feature detection when config does not force apply the polyfill\n    if( !config.forceApply ) {\n\n        // feature/browser detection\n        const detectedFeatures = detectFeatures();\n\n        // if( DEBUG ) {\n        //     Object.keys( detectedFeatures ).forEach( function( key ) {\n        //         console.log( \"dnd-poly: detected feature '\" + key + \" = \" + detectedFeatures[ key ] + \"'\" );\n        //     } );\n        // }\n\n        // check if native drag and drop support is there\n        if( detectedFeatures.userAgentSupportingNativeDnD\n            && detectedFeatures.draggable\n            && detectedFeatures.dragEvents ) {\n            // no polyfilling required\n            return false;\n        }\n    }\n\n    console.log( \"dnd-poly: Applying mobile drag and drop polyfill.\" );\n\n    // add listeners suitable for detecting a potential drag operation\n    if( config.holdToDrag ) {\n        console.log(\"dnd-poly: holdToDrag set to \" + config.holdToDrag);\n        addDocumentListener( \"touchstart\", onDelayTouchstart, false );\n    } else {\n        addDocumentListener( \"touchstart\", onTouchstart, false );\n    }\n\n    return true;\n}\n\n//</editor-fold>\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card__3mJh1\"};","//<editor-fold desc=\"static scroll utils\">\n\nimport { DragImageTranslateOverrideFn } from \"./index\";\nimport { Point } from \"./internal/dom-utils\";\n\ninterface ScrollIntentions {\n    horizontal:ScrollIntention;\n    vertical:ScrollIntention;\n}\n\ninterface IScrollBounds {\n    x:number;\n    y:number;\n    width:number;\n    height:number;\n    scrollX:number;\n    scrollY:number;\n    scrollHeight:number;\n    scrollWidth:number;\n}\n\nconst enum ScrollIntention {\n    NONE = 0,\n    LEFT_OR_TOP = -1,\n    RIGHT_OR_BOTTOM = 1\n}\n\nconst enum ScrollAxis {\n    HORIZONTAL,\n    VERTICAL\n}\n\nfunction isTopLevelEl( el:HTMLElement ):boolean {\n\n    return (el === document.body || el === document.documentElement);\n}\n\nfunction getElementViewportOffset( el:HTMLElement, axis:ScrollAxis ) {\n    let offset:number;\n\n    if( isTopLevelEl( el ) ) {\n        offset = (axis === ScrollAxis.HORIZONTAL) ? el.clientLeft : el.clientTop;\n    }\n    else {\n        const bounds = el.getBoundingClientRect();\n        offset = (axis === ScrollAxis.HORIZONTAL) ? bounds.left : bounds.top;\n    }\n\n    return offset;\n}\n\nfunction getElementViewportSize( el:HTMLElement, axis:ScrollAxis ) {\n    let size:number;\n\n    if( isTopLevelEl( el ) ) {\n        size = (axis === ScrollAxis.HORIZONTAL) ? window.innerWidth : window.innerHeight;\n    }\n    else {\n        size = (axis === ScrollAxis.HORIZONTAL) ? el.clientWidth : el.clientHeight;\n    }\n\n    return size;\n}\n\nfunction getSetElementScroll( el:HTMLElement, axis:ScrollAxis, scroll?:number ) {\n    const prop = (axis === ScrollAxis.HORIZONTAL) ? \"scrollLeft\" : \"scrollTop\";\n\n    // abstracting away compatibility issues on scroll properties of document/body\n    const isTopLevel = isTopLevelEl( el );\n\n    if( arguments.length === 2 ) {\n\n        if( isTopLevel ) {\n            return document.body[ prop ] || document.documentElement[ prop ];\n        }\n\n        return el[ prop ];\n    }\n\n    if( isTopLevel ) {\n        document.documentElement[ prop ] += scroll;\n        document.body[ prop ] += scroll;\n    }\n    else {\n        el[ prop ] += scroll;\n    }\n}\n\n//TODO check if scroll end is reached according to scroll intention? this is needed to implement scroll chaining\nfunction isScrollable( el:HTMLElement ):boolean {\n    const cs = getComputedStyle( el );\n\n    if( el.scrollHeight > el.clientHeight && (cs.overflowY === \"scroll\" || cs.overflowY === \"auto\") ) {\n        return true;\n    }\n\n    if( el.scrollWidth > el.clientWidth && (cs.overflowX === \"scroll\" || cs.overflowX === \"auto\") ) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction findScrollableParent( el:HTMLElement ):HTMLElement {\n    do {\n        if( !el ) {\n            return undefined;\n        }\n        if( isScrollable( el ) ) {\n            return el;\n        }\n        if( el === document.documentElement ) {\n            return null;\n        }\n    } while( el = <HTMLElement>el.parentNode );\n    return null;\n}\n\nfunction determineScrollIntention( currentCoordinate:number, size:number, threshold:number ):ScrollIntention {\n\n    // LEFT / TOP\n    if( currentCoordinate < threshold ) {\n        return ScrollIntention.LEFT_OR_TOP;\n    }\n    // RIGHT / BOTTOM\n    else if( size - currentCoordinate < threshold ) {\n        return ScrollIntention.RIGHT_OR_BOTTOM;\n    }\n    // NONE\n    return ScrollIntention.NONE;\n}\n\nfunction determineDynamicVelocity( scrollIntention:ScrollIntention, currentCoordinate:number, size:number, threshold:number ):number {\n\n    if( scrollIntention === ScrollIntention.LEFT_OR_TOP ) {\n\n        return Math.abs( currentCoordinate - threshold );\n    }\n    else if( scrollIntention === ScrollIntention.RIGHT_OR_BOTTOM ) {\n\n        return Math.abs( size - currentCoordinate - threshold );\n    }\n\n    return 0;\n}\n\nfunction isScrollEndReached( axis:ScrollAxis, scrollIntention:ScrollIntention, scrollBounds:IScrollBounds ) {\n\n    const currentScrollOffset = (axis === ScrollAxis.HORIZONTAL) ? (scrollBounds.scrollX) : (scrollBounds.scrollY);\n\n    // wants to scroll to the right/bottom\n    if( scrollIntention === ScrollIntention.RIGHT_OR_BOTTOM ) {\n\n        const maxScrollOffset = (axis === ScrollAxis.HORIZONTAL) ? (scrollBounds.scrollWidth - scrollBounds.width) : (scrollBounds.scrollHeight -\n            scrollBounds.height);\n\n        // is already at the right/bottom edge\n        return currentScrollOffset >= maxScrollOffset;\n    }\n    // wants to scroll to the left/top\n    else if( scrollIntention === ScrollIntention.LEFT_OR_TOP ) {\n\n        // is already at left/top edge\n        return (currentScrollOffset <= 0);\n    }\n    // no scroll\n    return true;\n}\n\n//</editor-fold>\n\nlet _options:ScrollOptions = {\n    threshold: 75,\n    // simplified cubic-ease-in function\n    velocityFn: function( velocity:number, threshold:number ) {\n        const multiplier = velocity / threshold;\n        const easeInCubic = multiplier * multiplier * multiplier;\n        return easeInCubic * threshold;\n    }\n};\n\nlet _scrollIntentions:ScrollIntentions = {\n    horizontal: ScrollIntention.NONE,\n    vertical: ScrollIntention.NONE\n};\n\nlet _dynamicVelocity:Point = {\n    x: 0,\n    y: 0\n};\n\nlet _scrollAnimationFrameId:any;\nlet _currentCoordinates:Point;\nlet _hoveredElement:HTMLElement;\nlet _scrollableParent:HTMLElement;\nlet _translateDragImageFn:( offsetX:number, offsetY:number ) => void;\n\n/**\n * core handler function\n */\nfunction handleDragImageTranslateOverride( event:TouchEvent,\n                                           currentCoordinates:Point,\n                                           hoveredElement:HTMLElement,\n                                           translateDragImageFn:( scrollDiffX:number, scrollDiffY:number ) => void ):void {\n\n    _currentCoordinates = currentCoordinates;\n    _translateDragImageFn = translateDragImageFn;\n\n    // update parent if hovered element changed\n    if( _hoveredElement !== hoveredElement ) {\n\n        _hoveredElement = hoveredElement;\n        _scrollableParent = findScrollableParent( _hoveredElement );\n    }\n\n    // update scroll intention and check if we should scroll at all\n    //TODO implement scroll chaining? if scroll end is reached continue to look for scrollable parent\n    const performScrollAnimation = updateScrollIntentions( _currentCoordinates, _scrollableParent, _options.threshold, _scrollIntentions, _dynamicVelocity );\n\n    // no animation in progress but scroll is intended\n    if( performScrollAnimation ) {\n\n        // setup scroll animation frame\n        scheduleScrollAnimation();\n    }\n    else if( !!_scrollAnimationFrameId ) {\n\n        window.cancelAnimationFrame( _scrollAnimationFrameId );\n        _scrollAnimationFrameId = null;\n    }\n}\n\n//<editor-fold desc=\"programmatic scroll animation frame handler\">\n\nfunction scheduleScrollAnimation() {\n\n    // prevent scheduling when already scheduled\n    if( !!_scrollAnimationFrameId ) {\n\n        return;\n    }\n\n    _scrollAnimationFrameId = window.requestAnimationFrame( scrollAnimation );\n}\n\nfunction scrollAnimation() {\n\n    let scrollDiffX = 0,\n        scrollDiffY = 0,\n        isTopLevel = isTopLevelEl( _scrollableParent );\n\n    if( _scrollIntentions.horizontal !== ScrollIntention.NONE ) {\n\n        scrollDiffX = Math.round( _options.velocityFn( _dynamicVelocity.x, _options.threshold ) * _scrollIntentions.horizontal );\n        getSetElementScroll( _scrollableParent, ScrollAxis.HORIZONTAL, scrollDiffX );\n    }\n\n    if( _scrollIntentions.vertical !== ScrollIntention.NONE ) {\n\n        scrollDiffY = Math.round( _options.velocityFn( _dynamicVelocity.y, _options.threshold ) * _scrollIntentions.vertical );\n        getSetElementScroll( _scrollableParent, ScrollAxis.VERTICAL, scrollDiffY );\n    }\n\n    if( isTopLevel ) {\n        // on top level element scrolling we need to translate the drag image as much as we scroll\n        _translateDragImageFn( scrollDiffX, scrollDiffY );\n    }\n    else {\n        // just scroll the container and update the drag image position without offset\n        _translateDragImageFn( 0, 0 );\n    }\n\n    // reset to make sure we can re-schedule scroll animation\n    _scrollAnimationFrameId = null;\n\n    // check if we should continue scrolling\n    //TODO implement scroll chaining? if scroll end is reached continue to look for scrollable parent\n    if( updateScrollIntentions( _currentCoordinates, _scrollableParent, _options.threshold, _scrollIntentions, _dynamicVelocity ) ) {\n\n        // re-schedule animation frame callback\n        scheduleScrollAnimation();\n    }\n}\n\n//</editor-fold>\n\n//<editor-fold desc=\"scroll checks\">\n\nfunction updateScrollIntentions( currentCoordinates:Point,\n                                 scrollableParent:HTMLElement,\n                                 threshold:number,\n                                 scrollIntentions:ScrollIntentions,\n                                 dynamicVelocity:Point ):boolean {\n\n    if( !currentCoordinates || !scrollableParent ) {\n\n        // when coordinates become undefined drag operation stopped. stop scrolling also.\n        return false;\n    }\n\n    const scrollableParentBounds:IScrollBounds = {\n        x: getElementViewportOffset( scrollableParent, ScrollAxis.HORIZONTAL ),\n        y: getElementViewportOffset( scrollableParent, ScrollAxis.VERTICAL ),\n        width: getElementViewportSize( scrollableParent, ScrollAxis.HORIZONTAL ),\n        height: getElementViewportSize( scrollableParent, ScrollAxis.VERTICAL ),\n        scrollX: getSetElementScroll( scrollableParent, ScrollAxis.HORIZONTAL ),\n        scrollY: getSetElementScroll( scrollableParent, ScrollAxis.VERTICAL ),\n        scrollWidth: scrollableParent.scrollWidth,\n        scrollHeight: scrollableParent.scrollHeight\n    };\n\n    const currentCoordinatesOffset = {\n        x: currentCoordinates.x - scrollableParentBounds.x,\n        y: currentCoordinates.y - scrollableParentBounds.y\n    };\n\n    scrollIntentions.horizontal = determineScrollIntention( currentCoordinatesOffset.x, scrollableParentBounds.width, threshold );\n    scrollIntentions.vertical = determineScrollIntention( currentCoordinatesOffset.y, scrollableParentBounds.height, threshold );\n\n    if( scrollIntentions.horizontal && isScrollEndReached( ScrollAxis.HORIZONTAL, scrollIntentions.horizontal, scrollableParentBounds ) ) {\n\n        // if scroll end is reached, reset to none\n        scrollIntentions.horizontal = ScrollIntention.NONE;\n    }\n    else if( scrollIntentions.horizontal ) {\n\n        dynamicVelocity.x = determineDynamicVelocity( scrollIntentions.horizontal, currentCoordinatesOffset.x, scrollableParentBounds.width, threshold );\n    }\n\n    if( scrollIntentions.vertical && isScrollEndReached( ScrollAxis.VERTICAL, scrollIntentions.vertical, scrollableParentBounds ) ) {\n\n        // if scroll end is reached, reset to none\n        scrollIntentions.vertical = ScrollIntention.NONE;\n    }\n    else if( scrollIntentions.vertical ) {\n\n        dynamicVelocity.y = determineDynamicVelocity( scrollIntentions.vertical, currentCoordinatesOffset.y, scrollableParentBounds.height, threshold );\n    }\n\n    return !!(scrollIntentions.horizontal || scrollIntentions.vertical);\n}\n\n//</editor-fold>\n\n//<editor-fold desc=\"public api\">\n\nexport interface ScrollOptions {\n    // threshold in px. when distance between scrollable element edge and touch position is smaller start programmatic scroll.\n    // defaults to 75px\n    threshold?:number;\n    // function to customize the scroll velocity\n    // velocity param: distance to scrollable element edge\n    // threshold: the threshold used to determine when scrolling should start\n    // defaults to cubic-ease-in.\n    velocityFn:( velocity:number, threshold:number ) => number;\n}\n\nexport const scrollBehaviourDragImageTranslateOverride:DragImageTranslateOverrideFn = handleDragImageTranslateOverride;\n\n//</editor-fold>\n","\nconst EMPTY = {};\n\nexport function assign(obj, props) {\n\t// eslint-disable-next-line guard-for-in\n\tfor (let i in props) {\n\t\tobj[i] = props[i];\n\t}\n\treturn obj;\n}\n\nexport function exec(url, route, opts) {\n\tlet reg = /(?:\\?([^#]*))?(#.*)?$/,\n\t\tc = url.match(reg),\n\t\tmatches = {},\n\t\tret;\n\tif (c && c[1]) {\n\t\tlet p = c[1].split('&');\n\t\tfor (let i=0; i<p.length; i++) {\n\t\t\tlet r = p[i].split('=');\n\t\t\tmatches[decodeURIComponent(r[0])] = decodeURIComponent(r.slice(1).join('='));\n\t\t}\n\t}\n\turl = segmentize(url.replace(reg, ''));\n\troute = segmentize(route || '');\n\tlet max = Math.max(url.length, route.length);\n\tfor (let i=0; i<max; i++) {\n\t\tif (route[i] && route[i].charAt(0)===':') {\n\t\t\tlet param = route[i].replace(/(^:|[+*?]+$)/g, ''),\n\t\t\t\tflags = (route[i].match(/[+*?]+$/) || EMPTY)[0] || '',\n\t\t\t\tplus = ~flags.indexOf('+'),\n\t\t\t\tstar = ~flags.indexOf('*'),\n\t\t\t\tval = url[i] || '';\n\t\t\tif (!val && !star && (flags.indexOf('?')<0 || plus)) {\n\t\t\t\tret = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatches[param] = decodeURIComponent(val);\n\t\t\tif (plus || star) {\n\t\t\t\tmatches[param] = url.slice(i).map(decodeURIComponent).join('/');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if (route[i]!==url[i]) {\n\t\t\tret = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (opts.default!==true && ret===false) return false;\n\treturn matches;\n}\n\nexport function pathRankSort(a, b) {\n\treturn (\n\t\t(a.rank < b.rank) ? 1 :\n\t\t\t(a.rank > b.rank) ? -1 :\n\t\t\t\t(a.index - b.index)\n\t);\n}\n\n// filter out VNodes without attributes (which are unrankeable), and add `index`/`rank` properties to be used in sorting.\nexport function prepareVNodeForRanking(vnode, index) {\n\tvnode.index = index;\n\tvnode.rank = rankChild(vnode);\n\treturn vnode.props;\n}\n\nexport function segmentize(url) {\n\treturn url.replace(/(^\\/+|\\/+$)/g, '').split('/');\n}\n\nexport function rankSegment(segment) {\n\treturn segment.charAt(0)==':' ? (1 + '*+?'.indexOf(segment.charAt(segment.length-1))) || 4 : 5;\n}\n\nexport function rank(path) {\n\treturn segmentize(path).map(rankSegment).join('');\n}\n\nfunction rankChild(vnode) {\n\treturn vnode.props.default ? 0 : rank(vnode.props.path);\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\ttry {\n\t\t\tc.__hooks._list.forEach(invokeCleanup);\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {import('./internal').HookState}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} initialState\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\nexport function useErrorBoundary(cb) {\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.forEach(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\tif (typeof hook._cleanup == 'function') hook._cleanup();\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\thook._cleanup = hook._value();\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","import { ComponentChildren, h } from \"preact\";\nimport style from \"./button.css\";\n\nexport interface ButtonProps {\n  className?: string;\n  type?: \"primary\";\n  onClick?: (e: MouseEvent) => void;\n  children?: ComponentChildren;\n}\n\nexport function Button(props: ButtonProps) {\n  let className = `${style.btn} ${props.className}`;\n  if (props.type === \"primary\") {\n    className += ` ${style[\"btn-primary\"]}`;\n  }\n  return (\n    <button onClick={props.onClick} className={className}>\n      {props.children}\n    </button>\n  );\n}\n","import { h } from \"preact\";\n\nexport function AddBoxIcon(props: { className?: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      {...props}\n    >\n      <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\" />\n    </svg>\n  );\n}\n","import { createContext } from \"preact\";\n\nexport type Paragraph = {\n  id: string;\n  text: string;\n};\n\nexport type EditorState = {\n  ver: number;\n  paragraphs: Record<string, Paragraph>;\n  list: string[];\n  draggingIndex: number | null;\n  lastAdded: number;\n  isSorting: boolean;\n  showsPreview: boolean;\n};\n\nfunction createParagraph(text = \"\"): Paragraph {\n  const id = String(Date.now());\n  return {\n    id,\n    text,\n  };\n}\nexport function updateParagraphText(text: string, id: string) {\n  return { type: \"UPDATE_PARAGRAPH\" as const, id, text };\n}\n\nexport function addParagraph() {\n  return { type: \"ADD_PARAGRAPH\" as const };\n}\n\nexport function deleteParagraph(id: string) {\n  return { type: \"DELETE_PARAGRAPH\" as const, id };\n}\n\nexport function startMoving(index: number) {\n  return { type: \"MOVE_START\" as const, index };\n}\nexport function moveParagraph(from: number, to: number) {\n  return { type: \"MOVE_PARAGRAPH\" as const, from, to };\n}\nexport function endMove() {\n  return { type: \"END_MOVE\" as const };\n}\n\nexport function toggleSort() {\n  return { type: \"TOGGLE_SORT\" as const };\n}\n\nexport function togglePreview() {\n  return { type: \"TOGGLE_PREVIEW\" as const };\n}\n\nexport type EditorAction = ReturnType<\n  | typeof updateParagraphText\n  | typeof addParagraph\n  | typeof deleteParagraph\n  | typeof startMoving\n  | typeof moveParagraph\n  | typeof endMove\n  | typeof toggleSort\n  | typeof togglePreview\n>;\n\nexport function editorReducer(\n  state: EditorState,\n  action: EditorAction\n): EditorState {\n  switch (action.type) {\n    case \"UPDATE_PARAGRAPH\": {\n      return {\n        ...state,\n        paragraphs: {\n          ...state.paragraphs,\n          [action.id]: {\n            ...state.paragraphs[action.id],\n            text: action.text,\n          },\n        },\n      };\n    }\n    case \"ADD_PARAGRAPH\": {\n      const p = createParagraph();\n      return {\n        ...state,\n        paragraphs: {\n          ...state.paragraphs,\n          [p.id]: p,\n        },\n        list: [...state.list, p.id],\n        lastAdded: state.list.length,\n      };\n    }\n    case \"DELETE_PARAGRAPH\": {\n      const paragraphs = state.paragraphs;\n      delete paragraphs[action.id];\n      state.list.splice(state.list.indexOf(action.id), 1);\n      return {\n        ...state,\n        paragraphs: { ...paragraphs },\n        list: [...state.list],\n      };\n    }\n    case \"MOVE_START\": {\n      return {\n        ...state,\n        draggingIndex: action.index,\n      };\n    }\n    case \"MOVE_PARAGRAPH\": {\n      const from = state.list[action.from];\n      const to = state.list[action.to];\n      state.list[action.from] = to;\n      state.list[action.to] = from;\n      return {\n        ...state,\n        list: [...state.list],\n        draggingIndex: action.to,\n      };\n    }\n    case \"END_MOVE\": {\n      return {\n        ...state,\n        draggingIndex: null,\n      };\n    }\n    case \"TOGGLE_SORT\": {\n      return {\n        ...state,\n        isSorting: !state.isSorting,\n      };\n    }\n    case \"TOGGLE_PREVIEW\": {\n      return {\n        ...state,\n        showsPreview: !state.showsPreview,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nconst initParagraph = createParagraph(\"\");\nexport const initialState: EditorState = {\n  ver: 1,\n  paragraphs: {\n    [initParagraph.id]: initParagraph,\n  },\n  list: [initParagraph.id],\n  draggingIndex: null,\n  lastAdded: 0,\n  isSorting: false,\n  showsPreview: false,\n};\n\nconst SAVE_KEY = \"save_data\";\nexport function saveEditorState(state: EditorState) {\n  try {\n    window.localStorage.setItem(SAVE_KEY, JSON.stringify(state));\n  } catch {\n    // nothing to do\n  }\n}\n\nexport function loadEditorState(): EditorState {\n  try {\n    const state: EditorState = JSON.parse(\n      window.localStorage.getItem(SAVE_KEY) ?? \"\"\n    );\n    return {\n      ...state,\n      isSorting: false,\n      draggingIndex: null,\n    };\n  } catch {\n    return initialState;\n  }\n}\n\nexport const EditorContext = createContext<{\n  state: EditorState;\n  dispatch: (action: EditorAction) => void;\n}>({ state: initialState, dispatch: () => void 0 });\n","import { h } from \"preact\";\nimport { Button } from \"../../button/button\";\nimport { AddBoxIcon } from \"./addBoxIcon\";\nimport style from \"./addButton.css\";\nimport buttonStyle from \"../../button/button.css\";\nimport { useCallback, useContext } from \"preact/hooks\";\nimport { addParagraph, EditorContext } from \"../editorState\";\n\nexport function AddButton() {\n  const { dispatch } = useContext(EditorContext);\n  const onClick = useCallback(() => {\n    dispatch(addParagraph());\n  }, []);\n  return (\n    <Button className={style[\"add-button\"]} type=\"primary\" onClick={onClick}>\n      <AddBoxIcon className={buttonStyle[\"btn-icon\"]} /> <span>追加する</span>\n    </Button>\n  );\n}\n","import \"mobile-drag-drop/default.css\";\nimport { polyfill } from \"mobile-drag-drop\";\nimport { scrollBehaviourDragImageTranslateOverride } from \"mobile-drag-drop/scroll-behaviour\";\nimport { ComponentChildren, createContext, h } from \"preact\";\nimport { useCallback, useContext, useRef } from \"preact/hooks\";\n\nif (typeof window !== \"undefined\") {\n  polyfill({\n    dragImageTranslateOverride: scrollBehaviourDragImageTranslateOverride,\n  });\n}\n\ninterface SortableCardProps {\n  index: number;\n  onMovieStart?: (index: number) => void;\n  onMove?: (dragIndex: number, dropIndex: number) => void;\n  onMoveEnd?: () => void;\n  className?: string;\n  children?: ComponentChildren;\n}\n\ntype DragInfo = {\n  data: {\n    index: number;\n  } | null;\n};\nconst DragContext = createContext<DragInfo>({ data: null });\n\nexport function SortableCard(props: SortableCardProps) {\n  const ref = useRef<HTMLDivElement | null>(null);\n  //const [isDragging, setDraggingState] = useState(false);\n  const dragContext = useContext(DragContext);\n  const onDragStart = useCallback(\n    (e: DragEvent) => {\n      const dataTransfer = e.dataTransfer;\n      if (!dataTransfer) {\n        throw new Error();\n      }\n      dataTransfer.dropEffect = \"move\";\n      dataTransfer.effectAllowed = \"move\";\n      dragContext.data = { index: props.index };\n      props.onMovieStart?.(props.index);\n    },\n    [props.index]\n  );\n  const onDragEnd = useCallback(() => {\n    props.onMoveEnd?.();\n  }, [props.onMoveEnd]);\n  const onDrag = useCallback(\n    (e: DragEvent) => {\n      if (!ref.current || !e.dataTransfer) {\n        return;\n      }\n      if (!dragContext.data) {\n        return;\n      }\n      const dragIndex = dragContext.data.index;\n      const hoverIndex = props.index;\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      // Determine mouse position\n      const clientOffset = { x: e.clientX, y: e.clientY };\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      // Time to actually perform the action\n      props.onMove?.(dragIndex, hoverIndex);\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      dragContext.data.index = hoverIndex;\n    },\n    [props.index]\n  );\n  return (\n    <div\n      ref={ref}\n      className={props.className}\n      draggable\n      onDragStart={onDragStart}\n      onDragOver={onDrag}\n      onDragEnd={onDragEnd}\n    >\n      {props.children}\n    </div>\n  );\n}\n","import { h } from \"preact\";\n\nexport function DeleteIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n    >\n      <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n    </svg>\n  );\n}\n","import { h } from \"preact\";\n\nexport function ReorderIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n    >\n      <path d=\"M3 15h18v-2H3v2zm0 4h18v-2H3v2zm0-8h18V9H3v2zm0-6v2h18V5H3z\" />\n    </svg>\n  );\n}\n","import { h } from \"preact\";\nimport { useCallback, useContext, useEffect, useRef } from \"preact/hooks\";\nimport { SortableCard } from \"../../sortable_card/sortableCard\";\nimport { DeleteIcon } from \"./deleteIcon\";\nimport pStyle from \"./paragraph.css\";\nimport cardStyle from \"../../card/card.css\";\nimport { ReorderIcon } from \"./reorderIcon\";\nimport {\n  deleteParagraph,\n  EditorAction,\n  EditorContext,\n  endMove,\n  moveParagraph,\n  startMoving,\n  updateParagraphText,\n} from \"../editorState\";\n\ninterface ParagraphProps {\n  id: string;\n  index: number;\n}\n\nexport function Paragraph(props: ParagraphProps) {\n  const { state, dispatch } = useContext(EditorContext);\n  const p = state.paragraphs[props.id];\n  if (!p) {\n    return null;\n  }\n  const bindDispatch = useCallback(function <\n    A extends unknown[],\n    B extends EditorAction\n  >(fn: (...args: A) => B) {\n    return useCallback((...args: A) => {\n      dispatch(fn(...args));\n    }, []);\n  },\n  []);\n  return (\n    <ParagraphPresenter\n      id={props.id}\n      index={props.index}\n      text={p.text}\n      isSorting={state.isSorting}\n      isDragging={state.draggingIndex === props.index}\n      focus={props.index === state.lastAdded}\n      onChange={bindDispatch(updateParagraphText)}\n      onDelete={bindDispatch(deleteParagraph)}\n      onMoveStart={bindDispatch(startMoving)}\n      onMove={bindDispatch(moveParagraph)}\n      onMoveEnd={bindDispatch(endMove)}\n    />\n  );\n}\n\ninterface ParagraphPresenterProps {\n  id: string;\n  index: number;\n  text: string;\n  isSorting: boolean;\n  isDragging: boolean;\n  focus: boolean;\n  onChange?(text: string, id: string): void;\n  onDelete?(id: string): void;\n  onMoveStart?(index: number): void;\n  onMove?(dragIndex: number, hoverIndex: number): void;\n  onMoveEnd?(): void;\n}\n\nexport function ParagraphPresenter(props: ParagraphPresenterProps) {\n  const onChange = useCallback(\n    (e: Event) => {\n      props.onChange?.((e.currentTarget as HTMLInputElement).value, props.id);\n    },\n    [props.onChange, props.id]\n  );\n  const onDelete = useCallback(\n    (e: Event) => {\n      e.preventDefault();\n      props.onDelete?.(props.id);\n    },\n    [props.id]\n  );\n  const textArea = useRef<HTMLTextAreaElement | null>(null);\n  useEffect(() => {\n    if (props.focus) {\n      textArea.current?.focus();\n    }\n  }, [props.focus]);\n  const textAreaId = `paragraph-${props.index}`;\n  return (\n    <li\n      className={`${cardStyle.card} ${pStyle.paragraph}`}\n      data-is-editing={props.isSorting ? \"true\" : \"false\"}\n      data-is-dragging={props.isDragging ? \"true\" : \"false\"}\n    >\n      <SortableCard\n        index={props.index}\n        className={`${pStyle.move} ${pStyle[\"edit-form\"]}`}\n        onMovieStart={props.onMoveStart}\n        onMove={props.onMove}\n        onMoveEnd={props.onMoveEnd}\n      >\n        <ReorderIcon />\n      </SortableCard>\n      <label className={pStyle.textarea}>\n        <textarea\n          id={textAreaId}\n          name={`paragraph-${props.index}`}\n          ref={textArea}\n          value={props.text}\n          onKeyUp={onChange}\n          placeholder={props.index === 0 ? \"文章を入力\" : \"\"}\n        />\n        <div className={pStyle.count} aria-label=\"文字カウント\">\n          {props.text.length}\n        </div>\n        <span className={pStyle[\"label-text\"]}>段落</span>\n      </label>\n      <div className={`${pStyle.delete} ${pStyle[\"edit-form\"]}`}>\n        <button\n          onClick={onDelete}\n          aria-label=\"削除ボタン\"\n          tabIndex={props.isSorting ? 0 : -1}\n        >\n          <DeleteIcon />\n        </button>\n      </div>\n    </li>\n  );\n}\n","import { h } from \"preact\";\nimport { useMemo } from \"preact/hooks\";\nimport { Paragraph } from \"../editorState\";\nimport style from \"./preview.css\";\nimport cardStyle from \"../../card/card.css\";\nimport jpStyle from \"../../styles/japanese.css\";\nimport { JSXInternal } from \"preact/src/jsx\";\n\nexport type PreviewProps = {\n  list: string[];\n  paragraph: Record<string, Paragraph>;\n};\n\nexport default function Preview(props: PreviewProps) {\n  const text = useMemo(() => {\n    return props.list.map((id) => {\n      const lines = (props.paragraph[id]?.text ?? \"\").split(\"\\n\");\n      const text = lines.reduce<(JSXInternal.Element | string)[]>(\n        (acc, text, i) => {\n          if (i === lines.length - 1) {\n            return [...acc, text];\n          } else {\n            return [...acc, text, <br key={`br-${i}`} />];\n          }\n        },\n        []\n      );\n      return (\n        <p\n          className={`${jpStyle[\"japanese-text\"]}`}\n          key={`preview-paragraph-${id}`}\n        >\n          {text}\n        </p>\n      );\n    });\n  }, [props.list, props.paragraph]);\n  return <div className={`${style.preview} ${cardStyle.card}`}>{text}</div>;\n}\n","import { h } from \"preact\";\nimport { useContext } from \"preact/hooks\";\nimport { AddButton } from \"./add_button/addButton\";\nimport style from \"./editor.css\";\nimport { EditorContext } from \"./editorState\";\nimport { Paragraph } from \"./paragraph/paragraph\";\nimport Preview from \"./preview/preview\";\n\nexport function Editor() {\n  const { state } = useContext(EditorContext);\n  return (\n    <div className={style.editor}>\n      <div>\n        <ul>\n          {state.list.map((id, index) => {\n            const p = state.paragraphs[id];\n            return (\n              p && (\n                <Paragraph key={`paragraph-${p.id}`} id={p.id} index={index} />\n              )\n            );\n          })}\n          <li>\n            <AddButton />\n          </li>\n        </ul>\n      </div>\n      {state.showsPreview && (\n        <div>\n          <Preview list={state.list} paragraph={state.paragraphs} />\n        </div>\n      )}\n    </div>\n  );\n}\n","import { FunctionalComponent, h } from \"preact\";\nimport { Editor } from \"../../components/editor/editor\";\nimport style from \"./style.css\";\n\nconst Home: FunctionalComponent = () => {\n  return (\n    <div className={style.home}>\n      <Editor />\n    </div>\n  );\n};\n\nexport default Home;\n","import { h } from \"preact\";\n\nexport function PreviewIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      enableBackground=\"new 0 0 24 24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n    >\n      <g>\n        <path d=\"M19,3H5C3.89,3,3,3.9,3,5v14c0,1.1,0.89,2,2,2h14c1.1,0,2-0.9,2-2V5C21,3.9,20.11,3,19,3z M19,19H5V7h14V19z M13.5,13 c0,0.83-0.67,1.5-1.5,1.5s-1.5-0.67-1.5-1.5c0-0.83,0.67-1.5,1.5-1.5S13.5,12.17,13.5,13z M12,9c-2.73,0-5.06,1.66-6,4 c0.94,2.34,3.27,4,6,4s5.06-1.66,6-4C17.06,10.66,14.73,9,12,9z M12,15.5c-1.38,0-2.5-1.12-2.5-2.5c0-1.38,1.12-2.5,2.5-2.5 c1.38,0,2.5,1.12,2.5,2.5C14.5,14.38,13.38,15.5,12,15.5z\" />\n      </g>\n    </svg>\n  );\n}\n","import { h } from \"preact\";\n\nexport function SortIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n    >\n      <path d=\"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z\" />\n    </svg>\n  );\n}\n","import { FunctionalComponent, h } from \"preact\";\nimport { useCallback, useContext } from \"preact/hooks\";\nimport {\n  EditorContext,\n  togglePreview,\n  toggleSort,\n} from \"../editor/editorState\";\nimport { PreviewIcon } from \"./previewIcon\";\nimport { SortIcon } from \"./sortIcon\";\nimport style from \"./style.css\";\n\nconst Header: FunctionalComponent = () => {\n  const { dispatch } = useContext(EditorContext);\n  const onToggleSort = useCallback((e: MouseEvent) => {\n    e.preventDefault();\n    dispatch(toggleSort());\n  }, []);\n  const onTogglePreview = useCallback((e: MouseEvent) => {\n    e.preventDefault();\n    dispatch(togglePreview());\n  }, []);\n  return (\n    <header className={style.header}>\n      <h1>段落エディター</h1>\n      <nav>\n        <a onClick={onToggleSort}>\n          <SortIcon />\n          <span>並び替え</span>\n        </a>\n        <a onClick={onTogglePreview}>\n          <PreviewIcon />\n          <span>プレビュー</span>\n        </a>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import { FunctionalComponent, h } from \"preact\";\nimport { Route, Router, RouterOnChangeArgs } from \"preact-router\";\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n} from \"preact/hooks\";\nimport Home from \"../routes/home\";\nimport {\n  EditorContext,\n  editorReducer,\n  loadEditorState,\n  saveEditorState,\n} from \"./editor/editorState\";\nimport Header from \"./header\";\n\nconst App: FunctionalComponent = () => {\n  const currentUrl = useRef(\"\");\n  const handleRoute = useCallback((e: RouterOnChangeArgs) => {\n    currentUrl.current = e.url;\n  }, []);\n\n  const [state, dispatch] = useReducer(editorReducer, undefined, () =>\n    loadEditorState()\n  );\n  useEffect(() => {\n    saveEditorState(state);\n  }, [state]);\n\n  const BASE_URL = process.env[\"BASE_URL\"] || \"\";\n  const contextValue = useMemo(() => ({ state, dispatch }), [state, dispatch]);\n  return (\n    <div id=\"app\">\n      <EditorContext.Provider value={contextValue}>\n        <Header />\n        <Router onChange={handleRoute}>\n          <Route path={`${BASE_URL}`} component={Home} default />\n        </Router>\n      </EditorContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import \"./style/index.css\";\nimport App from \"./components/app.tsx\";\n\nexport default App;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"btn__ove9P\",\"btn-icon\":\"btn-icon__3KkgF\",\"btn-primary\":\"btn-primary__1R6Z0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"editor__1I80g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"japanese-text\":\"japanese-text__1TNcs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header__3ax1h\",\"active\":\"active__2XB2z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preview\":\"preview__2K3aJ\"};"],"sourceRoot":""}